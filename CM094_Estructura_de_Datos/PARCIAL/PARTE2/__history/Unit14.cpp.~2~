//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit14.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
#include <string>
TfrmFecha *frmFecha;
void ordBurbuja(int[], int);
int tamano=0;
int *listaDia, *listaMes;
//---------------------------------------------------------------------------
__fastcall TfrmFecha::TfrmFecha(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
void __fastcall TfrmFecha::btnSalirClick(TObject *Sender)
{
	frmFecha->Close();
}
//---------------------------------------------------------------------------
void __fastcall TfrmFecha::btnReiniciarClick(TObject *Sender)
{
   lstFI->Clear();
   lstFO->Clear();
   txtDia->SetFocus();
}
//---------------------------------------------------------------------------

void __fastcall TfrmFecha::FormActivate(TObject *Sender)
{
   txtDia->SetFocus();
}
//---------------------------------------------------------------------------

void __fastcall TfrmFecha::btnAceptarClick(TObject *Sender)
{
  if( txtDia->Text!="" && txtMes->Text!="" && txtAnio->Text!=""){

	 String fecha;
	 if( (1<=StrToInt(txtDia->Text) && StrToInt(txtDia->Text)<=31)
		  && (1<=StrToInt(txtMes->Text) && StrToInt(txtMes->Text)<=12)
		  && (1900<=StrToInt(txtAnio->Text) && StrToInt(txtAnio->Text)<=2100)
		  && (StrToInt(txtAnio->Text)%4 == 0)){

		  fecha = txtDia->Text + "/" + txtMes->Text + "/" +  txtAnio->Text;
		  lstFI->Items->Add(fecha);

		  txtDia->Text="";
		  txtMes->Text="";
		  txtAnio->Text="";
		  txtDia->SetFocus();

		  tamano+=1;

	 }else{
		 ShowMessage("Dato incorrecto");
     }
   }else{
	   ShowMessage("Error en ingresar datos vacios");
   }

}
//---------------------------------------------------------------------------

void __fastcall TfrmFecha::btnOrdenarClick(TObject *Sender)
{
	tamano=lstFI->Items->Count;
	lista = new int[n];
	for (int i=0; i < n; i++) {
		lista[i] = StrToInt(lstLista->Items->Strings[i]);
	}


	 fecha = txtDia->Text + "/" + txtMes->Text + "/" +  txtAnio->Text;
	 lstFI->Items->Add(fecha);
}
//---------------------------------------------------------------------------

void intercambiar(int &x, int &y){
	int aux=x;
	x=y;
	y=aux;
}

void ordBurbuja(int a[], int n){
	bool interruptor = true;
	int pasada, j;
	for (pasada = 0; pasada < n-1 && interruptor; pasada++) {
		interruptor = false;
		for (j = 0; j < n-pasada-1; j++) {
			if (a[j] > a[j+1]) {
			   interruptor = true;
			   intercambiar(a[j], a[j+1]);
			}
		}
	}
}
