
ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 1





       MCS-51 Family Macro Assembler   A S E M - 5 1   V 1.3
       =====================================================



	Source File:	C:\Users\alumno\Desktop\cuarto lab\p8_dirigido4.asm
	Object File:	C:\Users\alumno\Desktop\cuarto lab\p8_dirigido4.hex
	List File:	C:\Users\alumno\Desktop\cuarto lab\p8_dirigido4.lst



 Line  I  Addr  Code            Source

    1:				;Hacer un programa que muestre:
    2:				; MODULO
    3:				; ENTRENADOR TMC51
    4:				;Y que parpadee.
    5:		N      0142	sdelay  equ 142h
    6:		N      8000		org 8000h
    7:	  8000	12 80 59		lcall inicioLCD
    8:	  8003	74 01			mov a, #1 ; fila 1
    9:	  8005	75 F0 00	 	mov b, #0 ; posición 0
   10:	  8008	12 81 58	 	lcall placeCur4
   11:	  800B	12 81 42	 	lcall prtLCD4 ; visualiza mensaje
   12:	  800E	4D 4F 44 55	 	db "MODULO",0
	  8012	4C 4F 00
   13:
   14:	  8015	74 02		 	mov a, #2 ; fila 2
   15:	  8017	75 F0 00	 	mov b, #0 ; posición 0
   16:	  801A	12 81 58	 	lcall placeCur4
   17:	  801D	12 81 42	 	lcall prtLCD4 ; muestra mensaje
   18:	  8020	45 4E 54 52	 	db "ENTRENADOR TMC51",0
	  8024	45 4E 41 44
	  8028	4F 52 20 54
	  802C	4D 43 35 31
	  8030	00
   19:	  8031	12 01 42	 	lcall sdelay
   20:	  8034			 repite:
   21:	  8034	78 0E		 	mov R0,#onDsp
   22:	  8036	12 80 B6	 	lcall wrLCDcom4
   23:	  8039	74 FA		 	mov A,#250
   24:	  803B	12 01 18	 	lcall delay
   25:	  803E	74 FA		 	mov A,#250
   26:	  8040	12 01 18	 	lcall delay
   27:	  8043	74 FA		 	mov A,#250
   28:	  8045	12 01 18	 	lcall delay
   29:	  8048	78 0A		 	mov R0,#offDsp
   30:	  804A	12 80 B6	 	lcall wrLCDcom4
   31:	  804D	74 FA		 	mov A,#250
   32:	  804F	12 01 18	 	lcall delay
   33:	  8052	74 FA		 	mov A,#250
   34:	  8054	12 01 18	 	lcall delay
   35:	  8057	80 DB			sjmp repite
   36:				$INCLUDE(subrutinasLCD.inc)
   37: 1	N      0090	LCD_DATA equ 90h ; Puerto P1
   38: 1	N      0091	LCD_RS equ 91h ; p1.1 Register Select del LCD

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 2



 Line  I  Addr  Code            Source

   39: 1	N      0092	LCD_RW equ 92h ; p1.2 Read/Write del LCD
   40: 1	N      0093	LCD_E equ 93h ; p1.3 Enable del LCD
   41: 1			; Instrucciones para el LCD
   42: 1	N      0028	Config equ 28h ; Function Set: Tamaño del bus de datos(4 bits), número de líneas es 2 y tamaño del f
       1			ont es 5x7
   43: 1	N      0006	entryMode equ 6 ; Modo de Entrada: Incrementa el cursor, no desplaza display
   44: 1			; instrucciones para el control del cursor
   45: 1	N      000C	offCur equ 0Ch ; Apaga el cursor(lo desaparece)
   46: 1	N      000E	lineCur equ 0Eh ; Cursor aparece como una línea
   47: 1	N      000D	blinkCur equ 0Dh ; Hace parpadear el cursor
   48: 1	N      000F	combnCur equ 0Fh ; Encender el Display, encender cursor y parpadea el caracter en la posición del cu
       1			rsor
   49: 1	N      0002	homeCur equ 02h ; Coloca el cursor en el extremo izquierdo de la primera fila
   50: 1	N      0010	shLfCur equ 10h ; Desplaza al cursor a la izquierda
   51: 1	N      0014	shRtCur equ 14h ; Desplaza al cursor a la derecha
   52: 1			; instrucciones para el control del display
   53: 1	N      0001	clrDsp equ 01h ; Limpia el display así como el contenido de la memoria
   54: 1	N      000E	onDsp equ 0Eh ; Display On, muestra caracteres en el display
   55: 1	N      000A	offDsp equ 0Ah ; Display Off, no limpia el contenido de la memoria
   56: 1	N      0018	shLfDsp   equ  18h  ;Desplazamiento del display a la izquierda
   57: 1	N      001C	shRtDsp   equ  1Ch  ;Desplazamiento del display a la derecha
   58: 1			; ----------------------------------------------------
   59: 1			; subrutinas del TMC51 Registros usados
   60: 1			; ----------------------------------------------------
   61: 1	N      0118	delay equ 118h ; a
   62: 1	N      0136	print equ 136h ; a, dptr
   63: 1			;-----------------------------------------------------
   64: 1			;subrutina inicioLCD
   65: 1  8059			inicioLCD:
   66: 1  8059	12 81 04		lcall resetLCD4 ; power on reset
   67: 1  805C	74 01			mov A,#1
   68: 1  805E	12 01 18	 	lcall delay
   69: 1  8061	12 80 6A		lcall initLCD4
   70: 1  8064	74 01			mov A,#1
   71: 1  8066	12 01 18	 	lcall delay
   72: 1  8069	22		 	ret
   73: 1			; ====================================================
   74: 1			; subrutina initLCD4 - se usa para inicializar el LCD
   75: 1			;
   76: 1			; ----------------------------------------------------
   77: 1  806A			initLCD4:
   78: 1  806A	C2 91		 clr LCD_RS ; Pin Register Select del LCD
   79: 1  806C	C2 92		 clr LCD_RW ; Pin Read/Write del LCD
   80: 1  806E	C2 93		 clr LCD_E ; Pin Enable del LCD
   81: 1  8070	78 28		 mov r0, #Config ; Function Set - data bits, lines, fonts
   82: 1  8072	12 80 B6	 lcall wrLCDcom4
   83: 1  8075	78 0E		 mov r0, #onDsp ; Enciende display
   84: 1  8077	12 80 B6	 lcall wrLCDcom4
   85: 1  807A	78 06		 mov r0, #entryMode ; set Entry Mode
   86: 1  807C	12 80 B6	 lcall wrLCDcom4 ; increment cursor to right, no display shift
   87: 1  807F	78 01		 mov r0, #clrDsp ; limpia display, cursor en home
   88: 1  8081	12 80 B6	 lcall wrLCDcom4
   89: 1  8084	22		 ret
   90: 1
   91: 1			; ====================================================
   92: 1			; subrutina wrLCDdata4

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 3



 Line  I  Addr  Code            Source

   93: 1			; escribe una palabra de datos al LCD
   94: 1			; datos deben ser localizados en R0
   95: 1			; ----------------------------------------------------
   96: 1  8085			wrLCDdata4:
   97: 1  8085	D2 91		 	setb LCD_RS ; selecciona envio de datos
   98: 1  8087	C2 92		 	clr LCD_RW ; selecciona operación de escritura
   99: 1  8089	C0 E0		 	push ACC ; salva el acumulador
  100: 1  808B	E8		 	mov A, R0 ; pone byte de datos en el acumulador
  101: 1  808C	A2 E7		 	mov C, ACC.7 ;
  102: 1  808E	92 97		 	mov P1.7, C ;
  103: 1  8090	A2 E6		 	mov C, ACC.6 ;
  104: 1  8092	92 96		 	mov P1.6, C ;
  105: 1  8094	A2 E5		 	mov C, ACC.5 ;
  106: 1  8096	92 95		 	mov P1.5, C ;
  107: 1  8098	A2 E4		 	mov C, ACC.4 ;
  108: 1  809A	92 94		 	mov P1.4, C ;hasta aquí se envia el nibble mas significativo
  109: 1  809C	D2 93			setb LCD_E ;
  110: 1  809E	C2 93			clr LCD_E ;
  111: 1  80A0	A2 E3			mov C, ACC.3 ;
  112: 1  80A2	92 97			mov P1.7, C ;
  113: 1  80A4	A2 E2			mov C, ACC.2 ;
  114: 1  80A6	92 96			mov P1.6, C ;
  115: 1  80A8	A2 E1			mov C, ACC.1 ;
  116: 1  80AA	92 95			mov P1.5, C ;
  117: 1  80AC	A2 E0			mov C, ACC.0 ;
  118: 1  80AE	92 94			mov P1.4, C ;se envia el nibble menos significativo
  119: 1  80B0	12 80 E7		lcall pulseEwait4 ; pulso en el pin Enable... y espera por el Flag Busy que se aclare
  120: 1  80B3	D0 E0			pop ACC
  121: 1  80B5	22			ret
  122: 1			; ====================================================
  123: 1			; subrutina wrLCDcom4
  124: 1			; escribe una palabra comando al LCD
  125: 1			; el comando debe ser localizado en r0
  126: 1			; ----------------------------------------------------
  127: 1  80B6			wrLCDcom4:
  128: 1  80B6	C2 91		 	clr LCD_RS ; limpia RS - y eso indica que son instrucciones a escribir
  129: 1  80B8	C2 92		 	clr LCD_RW ; selecciona operación de escritura
  130: 1  80BA	C0 E0		 	push ACC
  131: 1  80BC	E8		 	mov A,R0
  132: 1  80BD	A2 E7			mov C, ACC.7 ;
  133: 1  80BF	92 97			mov P1.7, C ;
  134: 1  80C1	A2 E6			mov C, ACC.6 ;
  135: 1  80C3	92 96			mov P1.6, C ;
  136: 1  80C5	A2 E5			mov C, ACC.5 ;
  137: 1  80C7	92 95			mov P1.5, C ;
  138: 1  80C9	A2 E4			mov C, ACC.4 ;
  139: 1  80CB	92 94			mov P1.4, C ;hasta aquí se envia el nibble mas significativo
  140: 1			;---------------------------------------
  141: 1  80CD	D2 93			setb LCD_E ;
  142: 1  80CF	C2 93			clr LCD_E ;
  143: 1  80D1	A2 E3			mov C, ACC.3 ;
  144: 1  80D3	92 97			mov P1.7, C ;
  145: 1  80D5	A2 E2			mov C, ACC.2 ;
  146: 1  80D7	92 96			mov P1.6, C ;
  147: 1  80D9	A2 E1			mov C, ACC.1 ;
  148: 1  80DB	92 95			mov P1.5, C ;

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 4



 Line  I  Addr  Code            Source

  149: 1  80DD	A2 E0			mov C, ACC.0 ;
  150: 1  80DF	92 94			mov P1.4, C ;se envia el nibble menos significativo
  151: 1			;---------------------------------------
  152: 1  80E1	12 80 E7		lcall pulseEwait4 ; pulso en el pin Enable...
  153: 1  80E4	D0 E0			pop ACC
  154: 1  80E6	22			ret
  155: 1			; ====================================================
  156: 1			; subrutina pulseEwait4
  157: 1			; genera un pulso positivo sobre el pin enable del LCD.
  158: 1			; espera por el Flag Busy se aclare antes de retornar.
  159: 1			; input : nada
  160: 1			; output : nada
  161: 1			; destroys : LCD_RW, LCD_RS, LCD_DATA
  162: 1			; ----------------------------------------------------
  163: 1  80E7			pulseEwait4:
  164: 1  80E7	C2 93		 	clr LCD_E
  165: 1  80E9	D2 93		 	setb LCD_E ; pulso en el pin Enable
  166: 1  80EB	C2 93		 	clr LCD_E
  167: 1  80ED	75 90 FF	 	mov LCD_DATA, #0ffh ; prepara el puerto para entrada
  168: 1  80F0	D2 92		 	setb LCD_RW ; prepara R/W para la operación de lectura
  169: 1  80F2	C0 E0		 	push ACC ; salva contenidos del acumulador
  170: 1  80F4			pEw:
  171: 1  80F4	D2 93		 	setb LCD_E ; inicia el pulso Enable
  172: 1  80F6	E5 90		 	mov A, LCD_DATA ; lee el nibble de estado
  173: 1  80F8	C2 93		 	clr LCD_E ; termina el pulso en Enable
  174: 1  80FA	D2 93		 	setb LCD_E ;
  175: 1  80FC	C2 93		 	clr LCD_E
  176: 1  80FE	20 E7 F3	 	jb ACC.7, pEw ; se hace el lazo mientras que Flag Busy es uno
  177: 1  8101	D0 E0		 	pop ACC ; restaura acumulador
  178: 1  8103	22		 	ret
  179: 1			; ====================================================
  180: 1			; subrutina resetLCD4 - reinicia el LCD
  181: 1			; version en software de la operación
  182: 1			; power on reset
  183: 1			; ----------------------------------------------------
  184: 1  8104			resetLCD4:
  185: 1  8104	C2 91		 	clr LCD_RS ; Se pone a 0 el pin RS
  186: 1  8106	C2 92		 	clr LCD_RW ; Se pone a 0 el pin Read / Write
  187: 1  8108	C2 93		 	clr LCD_E ; Se pone a 0 el pin E
  188: 1  810A	C2 97		 	clr P1.7 ; se fijan los bits para...
  189: 1  810C	C2 96		 	clr P1.6 ; ... power-on-reset
  190: 1  810E	D2 95		 	setb P1.5
  191: 1  8110	D2 94		 	setb P1.4
  192: 1			 	; paso 1
  193: 1  8112	D2 93		 	setb LCD_E ; start Enable pulse
  194: 1  8114	C2 93		 	clr LCD_E ; end Enable pulse
  195: 1  8116	74 04		 	mov A, #4 ; retardo de 4 milisegundos
  196: 1  8118	12 01 18	 	lcall delay
  197: 1			 	; paso 2
  198: 1  811B	D2 93		 	setb LCD_E ; start Enable pulse
  199: 1  811D	C2 93		 	clr LCD_E ; end Enable pulse
  200: 1  811F	74 01		 	mov A, #1 ; retardo de 1 milisegundo
  201: 1  8121	12 01 18		lcall delay
  202: 1			 	; paso 3
  203: 1  8124	D2 93		 	setb LCD_E ; start Enable pulse
  204: 1  8126	C2 93		 	clr LCD_E ; end Enable pulse

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 5



 Line  I  Addr  Code            Source

  205: 1  8128	74 01		 	mov A, #1 ; retardo de 1 milisegundo
  206: 1  812A	12 01 18	 	lcall delay
  207: 1  812D	78 28		 	mov R0, #Config ; FUNCTION SET
  208: 1  812F	12 80 B6	 	lcall wrLCDcom4
  209: 1  8132	78 0A		 	mov R0, #offDsp ; display off
  210: 1  8134	12 80 B6	 	lcall wrLCDcom4
  211: 1  8137	78 01		 	mov R0, #clrDsp ; clear display, home cursor
  212: 1  8139	12 80 B6	 	lcall wrLCDcom4
  213: 1  813C	78 06		 	mov R0, #entryMode ; set ENTRY MODE
  214: 1  813E	12 80 B6	 	lcall wrLCDcom4
  215: 1  8141	22		 	ret
  216: 1
  217: 1			; ==========================================================
  218: 1			; subrutina prtLCD4
  219: 1			; toma la cadena inmediatamente que sigue a call y
  220: 1			; lo muestra sobre el LCD. La cadena es leida con la
  221: 1			; instrucción mov a, @a+dptr.
  222: 1			; de este modo, la cadena se encuentra en memoria de datos.
  223: 1			; la cadena debe ser terminada con un nulo (0).
  224: 1			;
  225: 1			; input : nada
  226: 1			; output : nada
  227: 1			; destroys : acc, dptr
  228: 1			; ==========================================================
  229: 1			;
  230: 1  8142			prtLCD4:
  231: 1  8142	D0 83		 pop dph ; pop retorna dirección en el dptr
  232: 1  8144	D0 82		 pop dpl
  233: 1  8146			prtNext:
  234: 1  8146	E4		 clr a ; fija offset = 0
  235: 1  8147	93		 movc a, @a+dptr ; get chr from code memory
  236: 1  8148	B4 00 02	 cjne a, #0, chrOK ; if chr = 0 then return
  237: 1  814B	80 08		 sjmp retPrtLCD
  238: 1  814D			chrOK:
  239: 1  814D	F8		 mov r0, a
  240: 1  814E	12 80 85	 lcall wrLCDdata4 ; envia caracter
  241: 1  8151	A3		 inc dptr ; apunta al siguiente caracter
  242: 1  8152	02 81 46	 ljmp prtNext ; itera hasta el fin de la cadena
  243: 1  8155			retPrtLCD:
  244: 1  8155	74 01		 mov a, #1h ; apunta a la instrucción después de la cadena
  245: 1  8157	73		 jmp @a+dptr ; return with a jump instruction
  246: 1			; ==========================================================
  247: 1			; subrutina placeCur4
  248: 1			; esta rutina fija la posición del cursor. La posición del cursor
  249: 1			; es localizado en el registro B. La posición del cursor empieza
  250: 1			; en 0. El acumulador da el número de línea.
  251: 1			; input : el acumulador indica el número de línea (1, 2)
  252: 1			; : el registro B contiene la posición del cursor
  253: 1			; output : nada
  254: 1			; ==========================================================
  255: 1			;
  256: 1  8158			placeCur4:
  257: 1  8158	15 E0		 	dec acc ; acc=0 for line=1
  258: 1  815A	70 06		 	jnz line2 ; if acc=0 then first line
  259: 1  815C	E5 F0		 	mov a, b
  260: 1  815E	24 80		 	add a, #080h ; construct control word for line 1

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 6



 Line  I  Addr  Code            Source

  261: 1  8160	80 04		 	sjmp setcur
  262: 1  8162			line2:
  263: 1  8162	E5 F0		 	mov a, b
  264: 1  8164	24 C0		 	add a, #0C0h ; construct control word for line 2
  265: 1  8166			setcur:
  266: 1  8166	F8		 	mov r0, a ; place control word
  267: 1  8167	12 80 B6	 	lcall wrLCDcom4 ; issue command
  268: 1  816A	22		 	ret
  269: 1
  270: 1			 ; ==========================================================
  271: 1			; subrutina dspShLf4
  272: 1			; Esta rutina traslada los contenidos del LCD a la izquierda. El
  273: 1			; numero de caracteres a ser trasladados es localizado en el
  274: 1			; acumulador.
  275: 1			; entrada  : acumulador indica el numero de caracteres a trasladar
  276: 1			; salida   : nada
  277: 1			; ==========================================================
  278: 1			;
  279: 1  816B			dspShLf4:
  280: 1  816B	60 07		         jz    ret_sdl
  281: 1  816D	78 18		         mov   r0, #shLfDsp ; palabra de control para trasladar a la
  282: 1			                            ; izquierda
  283: 1  816F	11 B6		         acall wrLCDcom4
  284: 1  8171	14		         dec   a
  285: 1  8172	80 F7		         sjmp  dspShLf4
  286: 1  8174	22		ret_sdl: ret
  287: 1
  288: 1			; ==========================================================
  289: 1			; subrutina dspShRt4
  290: 1			; Esta rutina traslada los contenidos del LCD a la derecha. El
  291: 1			; numero de caracteres a ser trasladados es localizado en el
  292: 1			; acumulador.
  293: 1			; entrada  : acumulador indica el numero de caracteres a trasladar
  294: 1			; salida   : nada
  295: 1			; ==========================================================
  296: 1			;
  297: 1  8175			dspShRt4:
  298: 1  8175	60 07		         jz    ret_sdr
  299: 1  8177	78 1C		         mov   r0, #shRtDsp ; palabra de control para trasladar a
  300: 1			                            ; la derecha
  301: 1  8179	11 B6		         acall wrLCDcom4
  302: 1  817B	14		         dec   a
  303: 1  817C	80 F7		         sjmp  dspShRt4
  304: 1  817E	22		ret_sdr: ret
  305:					end





                     register banks used:  ---

                     no errors




ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 7





	       L I S T   O F   S Y M B O L S
	       =============================


SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??ASEM_51			  NUMBER    8051
??VERSION			  NUMBER    0130
AC				  BIT	      D6
ACC				  DATA	      E0
B				  DATA	      F0
BLINKCUR			  NUMBER    000D	  47
CHROK				  CODE	    814D	 238
CLRDSP				  NUMBER    0001	  53
COMBNCUR			  NUMBER    000F	  48
CONFIG				  NUMBER    0028	  42
CY				  BIT	      D7
DELAY				  NUMBER    0118	  61
DPH				  DATA	      83
DPL				  DATA	      82
DSPSHLF4			  CODE	    816B	 279
DSPSHRT4			  CODE	    8175	 297
EA				  BIT	      AF
ENTRYMODE			  NUMBER    0006	  43
ES				  BIT	      AC
ET0				  BIT	      A9
ET1				  BIT	      AB
EX0				  BIT	      A8
EX1				  BIT	      AA
EXTI0				  CODE	    0003
EXTI1				  CODE	    0013
F0				  BIT	      D5
HOMECUR				  NUMBER    0002	  49
IE				  DATA	      A8
IE0				  BIT	      89
IE1				  BIT	      8B
INICIOLCD			  CODE	    8059	  65
INITLCD4			  CODE	    806A	  77
INT0				  BIT	      B2
INT1				  BIT	      B3
IP				  DATA	      B8
IT0				  BIT	      88
IT1				  BIT	      8A
LCD_DATA			  NUMBER    0090	  37
LCD_E				  NUMBER    0093	  40
LCD_RS				  NUMBER    0091	  38
LCD_RW				  NUMBER    0092	  39
LINE2				  CODE	    8162	 262
LINECUR				  NUMBER    000E	  46
OFFCUR				  NUMBER    000C	  45
OFFDSP				  NUMBER    000A	  55
ONDSP				  NUMBER    000E	  54
OV				  BIT	      D2
P				  BIT	      D0
P0				  DATA	      80
P1				  DATA	      90

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 8



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
P2				  DATA	      A0
P3				  DATA	      B0
PCON				  DATA	      87
PEW				  CODE	    80F4	 170
PLACECUR4			  CODE	    8158	 256
PRINT				  NUMBER    0136	  62
PRTLCD4				  CODE	    8142	 230
PRTNEXT				  CODE	    8146	 233
PS				  BIT	      BC
PSW				  DATA	      D0
PT0				  BIT	      B9
PT1				  BIT	      BB
PULSEEWAIT4			  CODE	    80E7	 163
PX0				  BIT	      B8
PX1				  BIT	      BA
RB8				  BIT	      9A
RD				  BIT	      B7
REN				  BIT	      9C
REPITE				  CODE	    8034	  20
RESET				  CODE	    0000
RESETLCD4			  CODE	    8104	 184
RETPRTLCD			  CODE	    8155	 243
RET_SDL				  CODE	    8174	 286
RET_SDR				  CODE	    817E	 304
RI				  BIT	      98
RS0				  BIT	      D3
RS1				  BIT	      D4
RXD				  BIT	      B0
SBUF				  DATA	      99
SCON				  DATA	      98
SDELAY				  NUMBER    0142	   5
SETCUR				  CODE	    8166	 265
SHLFCUR				  NUMBER    0010	  50
SHLFDSP				  NUMBER    0018	  56
SHRTCUR				  NUMBER    0014	  51
SHRTDSP				  NUMBER    001C	  57
SINT				  CODE	    0023
SM0				  BIT	      9F
SM1				  BIT	      9E
SM2				  BIT	      9D
SP				  DATA	      81
T0				  BIT	      B4
T1				  BIT	      B5
TB8				  BIT	      9B
TCON				  DATA	      88
TF0				  BIT	      8D
TF1				  BIT	      8F
TH0				  DATA	      8C
TH1				  DATA	      8D
TI				  BIT	      99
TIMER0				  CODE	    000B
TIMER1				  CODE	    001B
TL0				  DATA	      8A
TL1				  DATA	      8B
TMOD				  DATA	      89
TR0				  BIT	      8C

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 9



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
TR1				  BIT	      8E
TXD				  BIT	      B1
WR				  BIT	      B6
WRLCDCOM4			  CODE	    80B6	 127
WRLCDDATA4			  CODE	    8085	  96
