
ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 1





       MCS-51 Family Macro Assembler   A S E M - 5 1   V 1.3
       =====================================================



	Source File:	C:\Users\alumno\Desktop\cuarto lab\p5_dirigido4.asm
	Object File:	C:\Users\alumno\Desktop\cuarto lab\p5_dirigido4.hex
	List File:	C:\Users\alumno\Desktop\cuarto lab\p5_dirigido4.lst



 Line  I  Addr  Code            Source

    1:				;Hacer un contador decimal de 0 a 250 cada décima de segundo en el LCD.
    2:		N      0148	sndchr  equ 148h
    3:		N      8000		org 8000h
    4:	  8000	12 80 6E		lcall inicioLCD
    5:	  8003	74 01			mov a, #1 	; fila 1
    6:	  8005	75 F0 00	 	mov b, #0 	; posición 0
    7:	  8008	12 81 6D	 	lcall placeCur4
    8:	  800B	7F FB		 	mov R7,#251
    9:	  800D	7B 00		 	mov R3,#0
   10:	  800F	78 0C		 	mov R0,#offCur ;desaparece el cursor
   11:	  8011	12 80 CB	 	lcall wrLCDcom4
   12:	  8014			lazo:
   13:	  8014	EB		 	mov A,R3
   14:	  8015	12 80 55	 	lcall tres_digitos_decimales
   15:	  8018	A8 30		 	mov R0,30h
   16:	  801A	12 80 9A	 	lcall wrLCDdata4
   17:	  801D	A8 31		 	mov R0,31h
   18:	  801F	12 80 9A	 	lcall wrLCDdata4
   19:	  8022	A8 32		 	mov R0,32h
   20:	  8024	12 80 9A	 	lcall wrLCDdata4
   21:	  8027	78 10		 	mov R0,#shLfCur	;desplaza el cursor a la izquierda
   22:	  8029	12 80 CB	 	lcall wrLCDcom4
   23:	  802C	78 10		 	mov R0,#shLfCur	;desplaza el cursor a la izquierda
   24:	  802E	12 80 CB	 	lcall wrLCDcom4
   25:	  8031	78 10		 	mov R0,#shLfCur	;desplaza el cursor a la izquierda
   26:	  8033	12 80 CB	 	lcall wrLCDcom4
   27:
   28:	  8036	E5 30		 	mov A,30h
   29:	  8038	12 01 48	 	lcall sndchr
   30:	  803B	E5 31		 	mov A,31h
   31:	  803D	12 01 48	 	lcall sndchr
   32:	  8040	E5 32		 	mov A,32h
   33:	  8042	12 01 48	 	lcall sndchr
   34:	  8045	74 0D		 	mov A,#0dh
   35:	  8047	12 01 48	 	lcall sndchr
   36:
   37:	  804A	74 64		 	mov A,#100
   38:	  804C	12 01 18	 	lcall delay
   39:	  804F	0B		 	inc R3
   40:	  8050	DF C2		 	djnz R7,lazo
   41:	  8052	02 02 F0	 	ljmp 2f0h
   42:	  8055			tres_digitos_decimales:
   43:	  8055	75 F0 64		mov B,#100

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 2



 Line  I  Addr  Code            Source

   44:	  8058	84			div AB
   45:	  8059	24 30			add A,#30h
   46:	  805B	F5 30			mov 30h,A
   47:	  805D	E5 F0			mov A,B
   48:	  805F	75 F0 0A		mov B,#10
   49:	  8062	84			div AB
   50:	  8063	24 30			add A,#30h
   51:	  8065	F5 31			mov 31h,A
   52:	  8067	E5 F0			mov A,B
   53:	  8069	24 30			add A,#30h
   54:	  806B	F5 32			mov 32h,A
   55:	  806D	22			ret
   56:				$INCLUDE(subrutinasLCD.inc)
   57: 1	N      0090	LCD_DATA equ 90h ; Puerto P1
   58: 1	N      0091	LCD_RS equ 91h ; p1.1 Register Select del LCD
   59: 1	N      0092	LCD_RW equ 92h ; p1.2 Read/Write del LCD
   60: 1	N      0093	LCD_E equ 93h ; p1.3 Enable del LCD
   61: 1			; Instrucciones para el LCD
   62: 1	N      0028	Config equ 28h ; Function Set: Tamaño del bus de datos(4 bits), número de líneas es 2 y tamaño del f
       1			ont es 5x7
   63: 1	N      0006	entryMode equ 6 ; Modo de Entrada: Incrementa el cursor, no desplaza display
   64: 1			; instrucciones para el control del cursor
   65: 1	N      000C	offCur equ 0Ch ; Apaga el cursor(lo desaparece)
   66: 1	N      000E	lineCur equ 0Eh ; Cursor aparece como una línea
   67: 1	N      000D	blinkCur equ 0Dh ; Hace parpadear el cursor
   68: 1	N      000F	combnCur equ 0Fh ; Encender el Display, encender cursor y parpadea el caracter en la posición del cu
       1			rsor
   69: 1	N      0002	homeCur equ 02h ; Coloca el cursor en el extremo izquierdo de la primera fila
   70: 1	N      0010	shLfCur equ 10h ; Desplaza al cursor a la izquierda
   71: 1	N      0014	shRtCur equ 14h ; Desplaza al cursor a la derecha
   72: 1			; instrucciones para el control del display
   73: 1	N      0001	clrDsp equ 01h ; Limpia el display así como el contenido de la memoria
   74: 1	N      000E	onDsp equ 0Eh ; Display On, muestra caracteres en el display
   75: 1	N      000A	offDsp equ 0Ah ; Display Off, no limpia el contenido de la memoria
   76: 1	N      0018	shLfDsp   equ  18h  ;Desplazamiento del display a la izquierda
   77: 1	N      001C	shRtDsp   equ  1Ch  ;Desplazamiento del display a la derecha
   78: 1			; ----------------------------------------------------
   79: 1			; subrutinas del TMC51 Registros usados
   80: 1			; ----------------------------------------------------
   81: 1	N      0118	delay equ 118h ; a
   82: 1	N      0136	print equ 136h ; a, dptr
   83: 1			;-----------------------------------------------------
   84: 1			;subrutina inicioLCD
   85: 1  806E			inicioLCD:
   86: 1  806E	12 81 19		lcall resetLCD4 ; power on reset
   87: 1  8071	74 01			mov A,#1
   88: 1  8073	12 01 18	 	lcall delay
   89: 1  8076	12 80 7F		lcall initLCD4
   90: 1  8079	74 01			mov A,#1
   91: 1  807B	12 01 18	 	lcall delay
   92: 1  807E	22		 	ret
   93: 1			; ====================================================
   94: 1			; subrutina initLCD4 - se usa para inicializar el LCD
   95: 1			;
   96: 1			; ----------------------------------------------------
   97: 1  807F			initLCD4:

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 3



 Line  I  Addr  Code            Source

   98: 1  807F	C2 91		 clr LCD_RS ; Pin Register Select del LCD
   99: 1  8081	C2 92		 clr LCD_RW ; Pin Read/Write del LCD
  100: 1  8083	C2 93		 clr LCD_E ; Pin Enable del LCD
  101: 1  8085	78 28		 mov r0, #Config ; Function Set - data bits, lines, fonts
  102: 1  8087	12 80 CB	 lcall wrLCDcom4
  103: 1  808A	78 0E		 mov r0, #onDsp ; Enciende display
  104: 1  808C	12 80 CB	 lcall wrLCDcom4
  105: 1  808F	78 06		 mov r0, #entryMode ; set Entry Mode
  106: 1  8091	12 80 CB	 lcall wrLCDcom4 ; increment cursor to right, no display shift
  107: 1  8094	78 01		 mov r0, #clrDsp ; limpia display, cursor en home
  108: 1  8096	12 80 CB	 lcall wrLCDcom4
  109: 1  8099	22		 ret
  110: 1
  111: 1			; ====================================================
  112: 1			; subrutina wrLCDdata4
  113: 1			; escribe una palabra de datos al LCD
  114: 1			; datos deben ser localizados en R0
  115: 1			; ----------------------------------------------------
  116: 1  809A			wrLCDdata4:
  117: 1  809A	D2 91		 	setb LCD_RS ; selecciona envio de datos
  118: 1  809C	C2 92		 	clr LCD_RW ; selecciona operación de escritura
  119: 1  809E	C0 E0		 	push ACC ; salva el acumulador
  120: 1  80A0	E8		 	mov A, R0 ; pone byte de datos en el acumulador
  121: 1  80A1	A2 E7		 	mov C, ACC.7 ;
  122: 1  80A3	92 97		 	mov P1.7, C ;
  123: 1  80A5	A2 E6		 	mov C, ACC.6 ;
  124: 1  80A7	92 96		 	mov P1.6, C ;
  125: 1  80A9	A2 E5		 	mov C, ACC.5 ;
  126: 1  80AB	92 95		 	mov P1.5, C ;
  127: 1  80AD	A2 E4		 	mov C, ACC.4 ;
  128: 1  80AF	92 94		 	mov P1.4, C ;hasta aquí se envia el nibble mas significativo
  129: 1  80B1	D2 93			setb LCD_E ;
  130: 1  80B3	C2 93			clr LCD_E ;
  131: 1  80B5	A2 E3			mov C, ACC.3 ;
  132: 1  80B7	92 97			mov P1.7, C ;
  133: 1  80B9	A2 E2			mov C, ACC.2 ;
  134: 1  80BB	92 96			mov P1.6, C ;
  135: 1  80BD	A2 E1			mov C, ACC.1 ;
  136: 1  80BF	92 95			mov P1.5, C ;
  137: 1  80C1	A2 E0			mov C, ACC.0 ;
  138: 1  80C3	92 94			mov P1.4, C ;se envia el nibble menos significativo
  139: 1  80C5	12 80 FC		lcall pulseEwait4 ; pulso en el pin Enable... y espera por el Flag Busy que se aclare
  140: 1  80C8	D0 E0			pop ACC
  141: 1  80CA	22			ret
  142: 1			; ====================================================
  143: 1			; subrutina wrLCDcom4
  144: 1			; escribe una palabra comando al LCD
  145: 1			; el comando debe ser localizado en r0
  146: 1			; ----------------------------------------------------
  147: 1  80CB			wrLCDcom4:
  148: 1  80CB	C2 91		 	clr LCD_RS ; limpia RS - y eso indica que son instrucciones a escribir
  149: 1  80CD	C2 92		 	clr LCD_RW ; selecciona operación de escritura
  150: 1  80CF	C0 E0		 	push ACC
  151: 1  80D1	E8		 	mov A,R0
  152: 1  80D2	A2 E7			mov C, ACC.7 ;
  153: 1  80D4	92 97			mov P1.7, C ;

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 4



 Line  I  Addr  Code            Source

  154: 1  80D6	A2 E6			mov C, ACC.6 ;
  155: 1  80D8	92 96			mov P1.6, C ;
  156: 1  80DA	A2 E5			mov C, ACC.5 ;
  157: 1  80DC	92 95			mov P1.5, C ;
  158: 1  80DE	A2 E4			mov C, ACC.4 ;
  159: 1  80E0	92 94			mov P1.4, C ;hasta aquí se envia el nibble mas significativo
  160: 1			;---------------------------------------
  161: 1  80E2	D2 93			setb LCD_E ;
  162: 1  80E4	C2 93			clr LCD_E ;
  163: 1  80E6	A2 E3			mov C, ACC.3 ;
  164: 1  80E8	92 97			mov P1.7, C ;
  165: 1  80EA	A2 E2			mov C, ACC.2 ;
  166: 1  80EC	92 96			mov P1.6, C ;
  167: 1  80EE	A2 E1			mov C, ACC.1 ;
  168: 1  80F0	92 95			mov P1.5, C ;
  169: 1  80F2	A2 E0			mov C, ACC.0 ;
  170: 1  80F4	92 94			mov P1.4, C ;se envia el nibble menos significativo
  171: 1			;---------------------------------------
  172: 1  80F6	12 80 FC		lcall pulseEwait4 ; pulso en el pin Enable...
  173: 1  80F9	D0 E0			pop ACC
  174: 1  80FB	22			ret
  175: 1			; ====================================================
  176: 1			; subrutina pulseEwait4
  177: 1			; genera un pulso positivo sobre el pin enable del LCD.
  178: 1			; espera por el Flag Busy se aclare antes de retornar.
  179: 1			; input : nada
  180: 1			; output : nada
  181: 1			; destroys : LCD_RW, LCD_RS, LCD_DATA
  182: 1			; ----------------------------------------------------
  183: 1  80FC			pulseEwait4:
  184: 1  80FC	C2 93		 	clr LCD_E
  185: 1  80FE	D2 93		 	setb LCD_E ; pulso en el pin Enable
  186: 1  8100	C2 93		 	clr LCD_E
  187: 1  8102	75 90 FF	 	mov LCD_DATA, #0ffh ; prepara el puerto para entrada
  188: 1  8105	D2 92		 	setb LCD_RW ; prepara R/W para la operación de lectura
  189: 1  8107	C0 E0		 	push ACC ; salva contenidos del acumulador
  190: 1  8109			pEw:
  191: 1  8109	D2 93		 	setb LCD_E ; inicia el pulso Enable
  192: 1  810B	E5 90		 	mov A, LCD_DATA ; lee el nibble de estado
  193: 1  810D	C2 93		 	clr LCD_E ; termina el pulso en Enable
  194: 1  810F	D2 93		 	setb LCD_E ;
  195: 1  8111	C2 93		 	clr LCD_E
  196: 1  8113	20 E7 F3	 	jb ACC.7, pEw ; se hace el lazo mientras que Flag Busy es uno
  197: 1  8116	D0 E0		 	pop ACC ; restaura acumulador
  198: 1  8118	22		 	ret
  199: 1			; ====================================================
  200: 1			; subrutina resetLCD4 - reinicia el LCD
  201: 1			; version en software de la operación
  202: 1			; power on reset
  203: 1			; ----------------------------------------------------
  204: 1  8119			resetLCD4:
  205: 1  8119	C2 91		 	clr LCD_RS ; Se pone a 0 el pin RS
  206: 1  811B	C2 92		 	clr LCD_RW ; Se pone a 0 el pin Read / Write
  207: 1  811D	C2 93		 	clr LCD_E ; Se pone a 0 el pin E
  208: 1  811F	C2 97		 	clr P1.7 ; se fijan los bits para...
  209: 1  8121	C2 96		 	clr P1.6 ; ... power-on-reset

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 5



 Line  I  Addr  Code            Source

  210: 1  8123	D2 95		 	setb P1.5
  211: 1  8125	D2 94		 	setb P1.4
  212: 1			 	; paso 1
  213: 1  8127	D2 93		 	setb LCD_E ; start Enable pulse
  214: 1  8129	C2 93		 	clr LCD_E ; end Enable pulse
  215: 1  812B	74 04		 	mov A, #4 ; retardo de 4 milisegundos
  216: 1  812D	12 01 18	 	lcall delay
  217: 1			 	; paso 2
  218: 1  8130	D2 93		 	setb LCD_E ; start Enable pulse
  219: 1  8132	C2 93		 	clr LCD_E ; end Enable pulse
  220: 1  8134	74 01		 	mov A, #1 ; retardo de 1 milisegundo
  221: 1  8136	12 01 18		lcall delay
  222: 1			 	; paso 3
  223: 1  8139	D2 93		 	setb LCD_E ; start Enable pulse
  224: 1  813B	C2 93		 	clr LCD_E ; end Enable pulse
  225: 1  813D	74 01		 	mov A, #1 ; retardo de 1 milisegundo
  226: 1  813F	12 01 18	 	lcall delay
  227: 1  8142	78 28		 	mov R0, #Config ; FUNCTION SET
  228: 1  8144	12 80 CB	 	lcall wrLCDcom4
  229: 1  8147	78 0A		 	mov R0, #offDsp ; display off
  230: 1  8149	12 80 CB	 	lcall wrLCDcom4
  231: 1  814C	78 01		 	mov R0, #clrDsp ; clear display, home cursor
  232: 1  814E	12 80 CB	 	lcall wrLCDcom4
  233: 1  8151	78 06		 	mov R0, #entryMode ; set ENTRY MODE
  234: 1  8153	12 80 CB	 	lcall wrLCDcom4
  235: 1  8156	22		 	ret
  236: 1
  237: 1			; ==========================================================
  238: 1			; subrutina prtLCD4
  239: 1			; toma la cadena inmediatamente que sigue a call y
  240: 1			; lo muestra sobre el LCD. La cadena es leida con la
  241: 1			; instrucción mov a, @a+dptr.
  242: 1			; de este modo, la cadena se encuentra en memoria de datos.
  243: 1			; la cadena debe ser terminada con un nulo (0).
  244: 1			;
  245: 1			; input : nada
  246: 1			; output : nada
  247: 1			; destroys : acc, dptr
  248: 1			; ==========================================================
  249: 1			;
  250: 1  8157			prtLCD4:
  251: 1  8157	D0 83		 pop dph ; pop retorna dirección en el dptr
  252: 1  8159	D0 82		 pop dpl
  253: 1  815B			prtNext:
  254: 1  815B	E4		 clr a ; fija offset = 0
  255: 1  815C	93		 movc a, @a+dptr ; get chr from code memory
  256: 1  815D	B4 00 02	 cjne a, #0, chrOK ; if chr = 0 then return
  257: 1  8160	80 08		 sjmp retPrtLCD
  258: 1  8162			chrOK:
  259: 1  8162	F8		 mov r0, a
  260: 1  8163	12 80 9A	 lcall wrLCDdata4 ; envia caracter
  261: 1  8166	A3		 inc dptr ; apunta al siguiente caracter
  262: 1  8167	02 81 5B	 ljmp prtNext ; itera hasta el fin de la cadena
  263: 1  816A			retPrtLCD:
  264: 1  816A	74 01		 mov a, #1h ; apunta a la instrucción después de la cadena
  265: 1  816C	73		 jmp @a+dptr ; return with a jump instruction

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 6



 Line  I  Addr  Code            Source

  266: 1			; ==========================================================
  267: 1			; subrutina placeCur4
  268: 1			; esta rutina fija la posición del cursor. La posición del cursor
  269: 1			; es localizado en el registro B. La posición del cursor empieza
  270: 1			; en 0. El acumulador da el número de línea.
  271: 1			; input : el acumulador indica el número de línea (1, 2)
  272: 1			; : el registro B contiene la posición del cursor
  273: 1			; output : nada
  274: 1			; ==========================================================
  275: 1			;
  276: 1  816D			placeCur4:
  277: 1  816D	15 E0		 	dec acc ; acc=0 for line=1
  278: 1  816F	70 06		 	jnz line2 ; if acc=0 then first line
  279: 1  8171	E5 F0		 	mov a, b
  280: 1  8173	24 80		 	add a, #080h ; construct control word for line 1
  281: 1  8175	80 04		 	sjmp setcur
  282: 1  8177			line2:
  283: 1  8177	E5 F0		 	mov a, b
  284: 1  8179	24 C0		 	add a, #0C0h ; construct control word for line 2
  285: 1  817B			setcur:
  286: 1  817B	F8		 	mov r0, a ; place control word
  287: 1  817C	12 80 CB	 	lcall wrLCDcom4 ; issue command
  288: 1  817F	22		 	ret
  289: 1
  290: 1			 ; ==========================================================
  291: 1			; subrutina dspShLf4
  292: 1			; Esta rutina traslada los contenidos del LCD a la izquierda. El
  293: 1			; numero de caracteres a ser trasladados es localizado en el
  294: 1			; acumulador.
  295: 1			; entrada  : acumulador indica el numero de caracteres a trasladar
  296: 1			; salida   : nada
  297: 1			; ==========================================================
  298: 1			;
  299: 1  8180			dspShLf4:
  300: 1  8180	60 07		         jz    ret_sdl
  301: 1  8182	78 18		         mov   r0, #shLfDsp ; palabra de control para trasladar a la
  302: 1			                            ; izquierda
  303: 1  8184	11 CB		         acall wrLCDcom4
  304: 1  8186	14		         dec   a
  305: 1  8187	80 F7		         sjmp  dspShLf4
  306: 1  8189	22		ret_sdl: ret
  307: 1
  308: 1			; ==========================================================
  309: 1			; subrutina dspShRt4
  310: 1			; Esta rutina traslada los contenidos del LCD a la derecha. El
  311: 1			; numero de caracteres a ser trasladados es localizado en el
  312: 1			; acumulador.
  313: 1			; entrada  : acumulador indica el numero de caracteres a trasladar
  314: 1			; salida   : nada
  315: 1			; ==========================================================
  316: 1			;
  317: 1  818A			dspShRt4:
  318: 1  818A	60 07		         jz    ret_sdr
  319: 1  818C	78 1C		         mov   r0, #shRtDsp ; palabra de control para trasladar a
  320: 1			                            ; la derecha
  321: 1  818E	11 CB		         acall wrLCDcom4

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 7



 Line  I  Addr  Code            Source

  322: 1  8190	14		         dec   a
  323: 1  8191	80 F7		         sjmp  dspShRt4
  324: 1  8193	22		ret_sdr: ret
  325:					end





                     register banks used:  ---

                     no errors




ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 8





	       L I S T   O F   S Y M B O L S
	       =============================


SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??ASEM_51			  NUMBER    8051
??VERSION			  NUMBER    0130
AC				  BIT	      D6
ACC				  DATA	      E0
B				  DATA	      F0
BLINKCUR			  NUMBER    000D	  67
CHROK				  CODE	    8162	 258
CLRDSP				  NUMBER    0001	  73
COMBNCUR			  NUMBER    000F	  68
CONFIG				  NUMBER    0028	  62
CY				  BIT	      D7
DELAY				  NUMBER    0118	  81
DPH				  DATA	      83
DPL				  DATA	      82
DSPSHLF4			  CODE	    8180	 299
DSPSHRT4			  CODE	    818A	 317
EA				  BIT	      AF
ENTRYMODE			  NUMBER    0006	  63
ES				  BIT	      AC
ET0				  BIT	      A9
ET1				  BIT	      AB
EX0				  BIT	      A8
EX1				  BIT	      AA
EXTI0				  CODE	    0003
EXTI1				  CODE	    0013
F0				  BIT	      D5
HOMECUR				  NUMBER    0002	  69
IE				  DATA	      A8
IE0				  BIT	      89
IE1				  BIT	      8B
INICIOLCD			  CODE	    806E	  85
INITLCD4			  CODE	    807F	  97
INT0				  BIT	      B2
INT1				  BIT	      B3
IP				  DATA	      B8
IT0				  BIT	      88
IT1				  BIT	      8A
LAZO				  CODE	    8014	  12
LCD_DATA			  NUMBER    0090	  57
LCD_E				  NUMBER    0093	  60
LCD_RS				  NUMBER    0091	  58
LCD_RW				  NUMBER    0092	  59
LINE2				  CODE	    8177	 282
LINECUR				  NUMBER    000E	  66
OFFCUR				  NUMBER    000C	  65
OFFDSP				  NUMBER    000A	  75
ONDSP				  NUMBER    000E	  74
OV				  BIT	      D2
P				  BIT	      D0
P0				  DATA	      80

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 9



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
P1				  DATA	      90
P2				  DATA	      A0
P3				  DATA	      B0
PCON				  DATA	      87
PEW				  CODE	    8109	 190
PLACECUR4			  CODE	    816D	 276
PRINT				  NUMBER    0136	  82
PRTLCD4				  CODE	    8157	 250
PRTNEXT				  CODE	    815B	 253
PS				  BIT	      BC
PSW				  DATA	      D0
PT0				  BIT	      B9
PT1				  BIT	      BB
PULSEEWAIT4			  CODE	    80FC	 183
PX0				  BIT	      B8
PX1				  BIT	      BA
RB8				  BIT	      9A
RD				  BIT	      B7
REN				  BIT	      9C
RESET				  CODE	    0000
RESETLCD4			  CODE	    8119	 204
RETPRTLCD			  CODE	    816A	 263
RET_SDL				  CODE	    8189	 306
RET_SDR				  CODE	    8193	 324
RI				  BIT	      98
RS0				  BIT	      D3
RS1				  BIT	      D4
RXD				  BIT	      B0
SBUF				  DATA	      99
SCON				  DATA	      98
SETCUR				  CODE	    817B	 285
SHLFCUR				  NUMBER    0010	  70
SHLFDSP				  NUMBER    0018	  76
SHRTCUR				  NUMBER    0014	  71
SHRTDSP				  NUMBER    001C	  77
SINT				  CODE	    0023
SM0				  BIT	      9F
SM1				  BIT	      9E
SM2				  BIT	      9D
SNDCHR				  NUMBER    0148	   2
SP				  DATA	      81
T0				  BIT	      B4
T1				  BIT	      B5
TB8				  BIT	      9B
TCON				  DATA	      88
TF0				  BIT	      8D
TF1				  BIT	      8F
TH0				  DATA	      8C
TH1				  DATA	      8D
TI				  BIT	      99
TIMER0				  CODE	    000B
TIMER1				  CODE	    001B
TL0				  DATA	      8A
TL1				  DATA	      8B
TMOD				  DATA	      89
TR0				  BIT	      8C

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 10



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
TR1				  BIT	      8E
TRES_DIGITOS_DECIMALES		  CODE	    8055	  42
TXD				  BIT	      B1
WR				  BIT	      B6
WRLCDCOM4			  CODE	    80CB	 147
WRLCDDATA4			  CODE	    809A	 116
