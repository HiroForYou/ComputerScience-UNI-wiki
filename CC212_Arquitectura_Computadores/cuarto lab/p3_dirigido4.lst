
ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 1





       MCS-51 Family Macro Assembler   A S E M - 5 1   V 1.3
       =====================================================



	Source File:	C:\Users\alumno\Desktop\cuarto lab\p3_dirigido4.asm
	Object File:	C:\Users\alumno\Desktop\cuarto lab\p3_dirigido4.hex
	List File:	C:\Users\alumno\Desktop\cuarto lab\p3_dirigido4.lst



 Line  I  Addr  Code            Source

    1:				;Modificar el programa anterior para que se muestre en la primera fila del display:
    2:				;CONTADOR: y en la segunda fila, en la posición 11 la cuenta del 0 al 9. Hacer lo mismo
    3:				;para que se visualice en el terminal.
    4:		N      0109	binasc  equ 109h
    5:		N      0142	sdelay  equ 142h
    6:		N      0148	sndchr  equ 148h
    7:		N      8000		org 8000h
    8:	  8000	12 80 6A		lcall inicioLCD
    9:	  8003	74 01			mov a, #1 	; fila 1
   10:	  8005	75 F0 00	 	mov b, #0 	; posición 0
   11:	  8008	12 81 69	      	lcall placeCur4 ; como b=0, el cursor ira a la posicion 0
   12:	  800B	12 81 53	 	lcall prtLCD4
   13:	  800E	43 4F 4E 54	 	db "CONTADOR :",0
	  8012	41 44 4F 52
	  8016	20 3A 00
   14:	  8019	12 01 36	 	lcall print
   15:	  801C	43 4F 4E 54	 	db "CONTADOR :",0dh, 0ah,0
	  8020	41 44 4F 52
	  8024	20 3A 0D 0A
	  8028	00
   16:
   17:	  8029			repite:
   18:	  8029	74 02		 	mov a, #2 	; fila 2
   19:	  802B	75 F0 0B	 	mov b, #11 	; posición 11
   20:	  802E	12 81 69	 	lcall placeCur4
   21:	  8031	7F 0A		 	mov R7,#10
   22:	  8033	7B 00		 	mov R3,#0
   23:	  8035	78 0C		 	mov R0,#offCur    ;desaparece el cursor
   24:	  8037	12 80 C7	 	lcall wrLCDcom4   ; escribe una palabra comando al LCD
   25:				                          ; el comando debe ser localizado en R0
   26:	  803A			lazo:
   27:	  803A	EB		 	mov A,R3
   28:	  803B	12 01 09	 	lcall binasc
   29:	  803E	8A 30		 	mov 30h,R2
   30:	  8040	EA		 	mov A,R2
   31:	  8041	F8		 	mov R0,A
   32:	  8042	12 80 96	 	lcall wrLCDdata4
   33:	  8045	78 10		 	mov R0,#shLfCur	;desplaza el cursor a la izquierda
   34:	  8047	12 80 C7	 	lcall wrLCDcom4
   35:	  804A	12 80 60	 	lcall once_espacios
   36:	  804D	E5 30		 	mov A,30h
   37:	  804F	12 01 48	 	lcall sndchr
   38:	  8052	74 0D		 	mov A,#0dh

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 2



 Line  I  Addr  Code            Source

   39:	  8054	12 01 48	 	lcall sndchr  ;envia un caracter contenido en el acumulador A
   40:	  8057	12 01 42	 	lcall sdelay  ;retardo de un segundo
   41:	  805A	0B		  	inc R3
   42:	  805B	DF DD		 	djnz R7,lazo
   43:	  805D	02 02 F0	 	ljmp 2F0h
   44:	  8060			once_espacios:
   45:	  8060	7D 0B			mov R5,#11
   46:	  8062			loop:
   47:	  8062	74 20			mov A,#20h
   48:	  8064	12 01 48		lcall sndchr
   49:	  8067	DD F9			djnz R5,loop
   50:	  8069	22			ret
   51:				$INCLUDE(subrutinasLCD.inc)
   52: 1	N      0090	LCD_DATA equ 90h ; Puerto P1
   53: 1	N      0091	LCD_RS equ 91h ; p1.1 Register Select del LCD
   54: 1	N      0092	LCD_RW equ 92h ; p1.2 Read/Write del LCD
   55: 1	N      0093	LCD_E equ 93h ; p1.3 Enable del LCD
   56: 1			; Instrucciones para el LCD
   57: 1	N      0028	Config equ 28h ; Function Set: Tamaño del bus de datos(4 bits), número de líneas es 2 y tamaño del f
       1			ont es 5x7
   58: 1	N      0006	entryMode equ 6 ; Modo de Entrada: Incrementa el cursor, no desplaza display
   59: 1			; instrucciones para el control del cursor
   60: 1	N      000C	offCur equ 0Ch ; Apaga el cursor(lo desaparece)
   61: 1	N      000E	lineCur equ 0Eh ; Cursor aparece como una línea
   62: 1	N      000D	blinkCur equ 0Dh ; Hace parpadear el cursor
   63: 1	N      000F	combnCur equ 0Fh ; Encender el Display, encender cursor y parpadea el caracter en la posición del cu
       1			rsor
   64: 1	N      0002	homeCur equ 02h ; Coloca el cursor en el extremo izquierdo de la primera fila
   65: 1	N      0010	shLfCur equ 10h ; Desplaza al cursor a la izquierda
   66: 1	N      0014	shRtCur equ 14h ; Desplaza al cursor a la derecha
   67: 1			; instrucciones para el control del display
   68: 1	N      0001	clrDsp equ 01h ; Limpia el display así como el contenido de la memoria
   69: 1	N      000E	onDsp equ 0Eh ; Display On, muestra caracteres en el display
   70: 1	N      000A	offDsp equ 0Ah ; Display Off, no limpia el contenido de la memoria
   71: 1	N      0018	shLfDsp   equ  18h  ;Desplazamiento del display a la izquierda
   72: 1	N      001C	shRtDsp   equ  1Ch  ;Desplazamiento del display a la derecha
   73: 1			; ----------------------------------------------------
   74: 1			; subrutinas del TMC51 Registros usados
   75: 1			; ----------------------------------------------------
   76: 1	N      0118	delay equ 118h ; a
   77: 1	N      0136	print equ 136h ; a, dptr
   78: 1			;-----------------------------------------------------
   79: 1			;subrutina inicioLCD
   80: 1  806A			inicioLCD:
   81: 1  806A	12 81 15		lcall resetLCD4 ; power on reset
   82: 1  806D	74 01			mov A,#1
   83: 1  806F	12 01 18	 	lcall delay
   84: 1  8072	12 80 7B		lcall initLCD4
   85: 1  8075	74 01			mov A,#1
   86: 1  8077	12 01 18	 	lcall delay
   87: 1  807A	22		 	ret
   88: 1			; ====================================================
   89: 1			; subrutina initLCD4 - se usa para inicializar el LCD
   90: 1			;
   91: 1			; ----------------------------------------------------
   92: 1  807B			initLCD4:

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 3



 Line  I  Addr  Code            Source

   93: 1  807B	C2 91		 clr LCD_RS ; Pin Register Select del LCD
   94: 1  807D	C2 92		 clr LCD_RW ; Pin Read/Write del LCD
   95: 1  807F	C2 93		 clr LCD_E ; Pin Enable del LCD
   96: 1  8081	78 28		 mov r0, #Config ; Function Set - data bits, lines, fonts
   97: 1  8083	12 80 C7	 lcall wrLCDcom4
   98: 1  8086	78 0E		 mov r0, #onDsp ; Enciende display
   99: 1  8088	12 80 C7	 lcall wrLCDcom4
  100: 1  808B	78 06		 mov r0, #entryMode ; set Entry Mode
  101: 1  808D	12 80 C7	 lcall wrLCDcom4 ; increment cursor to right, no display shift
  102: 1  8090	78 01		 mov r0, #clrDsp ; limpia display, cursor en home
  103: 1  8092	12 80 C7	 lcall wrLCDcom4
  104: 1  8095	22		 ret
  105: 1
  106: 1			; ====================================================
  107: 1			; subrutina wrLCDdata4
  108: 1			; escribe una palabra de datos al LCD
  109: 1			; datos deben ser localizados en R0
  110: 1			; ----------------------------------------------------
  111: 1  8096			wrLCDdata4:
  112: 1  8096	D2 91		 	setb LCD_RS ; selecciona envio de datos
  113: 1  8098	C2 92		 	clr LCD_RW ; selecciona operación de escritura
  114: 1  809A	C0 E0		 	push ACC ; salva el acumulador
  115: 1  809C	E8		 	mov A, R0 ; pone byte de datos en el acumulador
  116: 1  809D	A2 E7		 	mov C, ACC.7 ;
  117: 1  809F	92 97		 	mov P1.7, C ;
  118: 1  80A1	A2 E6		 	mov C, ACC.6 ;
  119: 1  80A3	92 96		 	mov P1.6, C ;
  120: 1  80A5	A2 E5		 	mov C, ACC.5 ;
  121: 1  80A7	92 95		 	mov P1.5, C ;
  122: 1  80A9	A2 E4		 	mov C, ACC.4 ;
  123: 1  80AB	92 94		 	mov P1.4, C ;hasta aquí se envia el nibble mas significativo
  124: 1  80AD	D2 93			setb LCD_E ;
  125: 1  80AF	C2 93			clr LCD_E ;
  126: 1  80B1	A2 E3			mov C, ACC.3 ;
  127: 1  80B3	92 97			mov P1.7, C ;
  128: 1  80B5	A2 E2			mov C, ACC.2 ;
  129: 1  80B7	92 96			mov P1.6, C ;
  130: 1  80B9	A2 E1			mov C, ACC.1 ;
  131: 1  80BB	92 95			mov P1.5, C ;
  132: 1  80BD	A2 E0			mov C, ACC.0 ;
  133: 1  80BF	92 94			mov P1.4, C ;se envia el nibble menos significativo
  134: 1  80C1	12 80 F8		lcall pulseEwait4 ; pulso en el pin Enable... y espera por el Flag Busy que se aclare
  135: 1  80C4	D0 E0			pop ACC
  136: 1  80C6	22			ret
  137: 1			; ====================================================
  138: 1			; subrutina wrLCDcom4
  139: 1			; escribe una palabra comando al LCD
  140: 1			; el comando debe ser localizado en r0
  141: 1			; ----------------------------------------------------
  142: 1  80C7			wrLCDcom4:
  143: 1  80C7	C2 91		 	clr LCD_RS ; limpia RS - y eso indica que son instrucciones a escribir
  144: 1  80C9	C2 92		 	clr LCD_RW ; selecciona operación de escritura
  145: 1  80CB	C0 E0		 	push ACC
  146: 1  80CD	E8		 	mov A,R0
  147: 1  80CE	A2 E7			mov C, ACC.7 ;
  148: 1  80D0	92 97			mov P1.7, C ;

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 4



 Line  I  Addr  Code            Source

  149: 1  80D2	A2 E6			mov C, ACC.6 ;
  150: 1  80D4	92 96			mov P1.6, C ;
  151: 1  80D6	A2 E5			mov C, ACC.5 ;
  152: 1  80D8	92 95			mov P1.5, C ;
  153: 1  80DA	A2 E4			mov C, ACC.4 ;
  154: 1  80DC	92 94			mov P1.4, C ;hasta aquí se envia el nibble mas significativo
  155: 1			;---------------------------------------
  156: 1  80DE	D2 93			setb LCD_E ;
  157: 1  80E0	C2 93			clr LCD_E ;
  158: 1  80E2	A2 E3			mov C, ACC.3 ;
  159: 1  80E4	92 97			mov P1.7, C ;
  160: 1  80E6	A2 E2			mov C, ACC.2 ;
  161: 1  80E8	92 96			mov P1.6, C ;
  162: 1  80EA	A2 E1			mov C, ACC.1 ;
  163: 1  80EC	92 95			mov P1.5, C ;
  164: 1  80EE	A2 E0			mov C, ACC.0 ;
  165: 1  80F0	92 94			mov P1.4, C ;se envia el nibble menos significativo
  166: 1			;---------------------------------------
  167: 1  80F2	12 80 F8		lcall pulseEwait4 ; pulso en el pin Enable...
  168: 1  80F5	D0 E0			pop ACC
  169: 1  80F7	22			ret
  170: 1			; ====================================================
  171: 1			; subrutina pulseEwait4
  172: 1			; genera un pulso positivo sobre el pin enable del LCD.
  173: 1			; espera por el Flag Busy se aclare antes de retornar.
  174: 1			; input : nada
  175: 1			; output : nada
  176: 1			; destroys : LCD_RW, LCD_RS, LCD_DATA
  177: 1			; ----------------------------------------------------
  178: 1  80F8			pulseEwait4:
  179: 1  80F8	C2 93		 	clr LCD_E
  180: 1  80FA	D2 93		 	setb LCD_E ; pulso en el pin Enable
  181: 1  80FC	C2 93		 	clr LCD_E
  182: 1  80FE	75 90 FF	 	mov LCD_DATA, #0ffh ; prepara el puerto para entrada
  183: 1  8101	D2 92		 	setb LCD_RW ; prepara R/W para la operación de lectura
  184: 1  8103	C0 E0		 	push ACC ; salva contenidos del acumulador
  185: 1  8105			pEw:
  186: 1  8105	D2 93		 	setb LCD_E ; inicia el pulso Enable
  187: 1  8107	E5 90		 	mov A, LCD_DATA ; lee el nibble de estado
  188: 1  8109	C2 93		 	clr LCD_E ; termina el pulso en Enable
  189: 1  810B	D2 93		 	setb LCD_E ;
  190: 1  810D	C2 93		 	clr LCD_E
  191: 1  810F	20 E7 F3	 	jb ACC.7, pEw ; se hace el lazo mientras que Flag Busy es uno
  192: 1  8112	D0 E0		 	pop ACC ; restaura acumulador
  193: 1  8114	22		 	ret
  194: 1			; ====================================================
  195: 1			; subrutina resetLCD4 - reinicia el LCD
  196: 1			; version en software de la operación
  197: 1			; power on reset
  198: 1			; ----------------------------------------------------
  199: 1  8115			resetLCD4:
  200: 1  8115	C2 91		 	clr LCD_RS ; Se pone a 0 el pin RS
  201: 1  8117	C2 92		 	clr LCD_RW ; Se pone a 0 el pin Read / Write
  202: 1  8119	C2 93		 	clr LCD_E ; Se pone a 0 el pin E
  203: 1  811B	C2 97		 	clr P1.7 ; se fijan los bits para...
  204: 1  811D	C2 96		 	clr P1.6 ; ... power-on-reset

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 5



 Line  I  Addr  Code            Source

  205: 1  811F	D2 95		 	setb P1.5
  206: 1  8121	D2 94		 	setb P1.4
  207: 1			 	; paso 1
  208: 1  8123	D2 93		 	setb LCD_E ; start Enable pulse
  209: 1  8125	C2 93		 	clr LCD_E ; end Enable pulse
  210: 1  8127	74 04		 	mov A, #4 ; retardo de 4 milisegundos
  211: 1  8129	12 01 18	 	lcall delay
  212: 1			 	; paso 2
  213: 1  812C	D2 93		 	setb LCD_E ; start Enable pulse
  214: 1  812E	C2 93		 	clr LCD_E ; end Enable pulse
  215: 1  8130	74 01		 	mov A, #1 ; retardo de 1 milisegundo
  216: 1  8132	12 01 18		lcall delay
  217: 1			 	; paso 3
  218: 1  8135	D2 93		 	setb LCD_E ; start Enable pulse
  219: 1  8137	C2 93		 	clr LCD_E ; end Enable pulse
  220: 1  8139	74 01		 	mov A, #1 ; retardo de 1 milisegundo
  221: 1  813B	12 01 18	 	lcall delay
  222: 1  813E	78 28		 	mov R0, #Config ; FUNCTION SET
  223: 1  8140	12 80 C7	 	lcall wrLCDcom4
  224: 1  8143	78 0A		 	mov R0, #offDsp ; display off
  225: 1  8145	12 80 C7	 	lcall wrLCDcom4
  226: 1  8148	78 01		 	mov R0, #clrDsp ; clear display, home cursor
  227: 1  814A	12 80 C7	 	lcall wrLCDcom4
  228: 1  814D	78 06		 	mov R0, #entryMode ; set ENTRY MODE
  229: 1  814F	12 80 C7	 	lcall wrLCDcom4
  230: 1  8152	22		 	ret
  231: 1
  232: 1			; ==========================================================
  233: 1			; subrutina prtLCD4
  234: 1			; toma la cadena inmediatamente que sigue a call y
  235: 1			; lo muestra sobre el LCD. La cadena es leida con la
  236: 1			; instrucción mov a, @a+dptr.
  237: 1			; de este modo, la cadena se encuentra en memoria de datos.
  238: 1			; la cadena debe ser terminada con un nulo (0).
  239: 1			;
  240: 1			; input : nada
  241: 1			; output : nada
  242: 1			; destroys : acc, dptr
  243: 1			; ==========================================================
  244: 1			;
  245: 1  8153			prtLCD4:
  246: 1  8153	D0 83		 pop dph ; pop retorna dirección en el dptr
  247: 1  8155	D0 82		 pop dpl
  248: 1  8157			prtNext:
  249: 1  8157	E4		 clr a ; fija offset = 0
  250: 1  8158	93		 movc a, @a+dptr ; get chr from code memory
  251: 1  8159	B4 00 02	 cjne a, #0, chrOK ; if chr = 0 then return
  252: 1  815C	80 08		 sjmp retPrtLCD
  253: 1  815E			chrOK:
  254: 1  815E	F8		 mov r0, a
  255: 1  815F	12 80 96	 lcall wrLCDdata4 ; envia caracter
  256: 1  8162	A3		 inc dptr ; apunta al siguiente caracter
  257: 1  8163	02 81 57	 ljmp prtNext ; itera hasta el fin de la cadena
  258: 1  8166			retPrtLCD:
  259: 1  8166	74 01		 mov a, #1h ; apunta a la instrucción después de la cadena
  260: 1  8168	73		 jmp @a+dptr ; return with a jump instruction

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 6



 Line  I  Addr  Code            Source

  261: 1			; ==========================================================
  262: 1			; subrutina placeCur4
  263: 1			; esta rutina fija la posición del cursor. La posición del cursor
  264: 1			; es localizado en el registro B. La posición del cursor empieza
  265: 1			; en 0. El acumulador da el número de línea.
  266: 1			; input : el acumulador indica el número de línea (1, 2)
  267: 1			; : el registro B contiene la posición del cursor
  268: 1			; output : nada
  269: 1			; ==========================================================
  270: 1			;
  271: 1  8169			placeCur4:
  272: 1  8169	15 E0		 	dec acc ; acc=0 for line=1
  273: 1  816B	70 06		 	jnz line2 ; if acc=0 then first line
  274: 1  816D	E5 F0		 	mov a, b
  275: 1  816F	24 80		 	add a, #080h ; construct control word for line 1
  276: 1  8171	80 04		 	sjmp setcur
  277: 1  8173			line2:
  278: 1  8173	E5 F0		 	mov a, b
  279: 1  8175	24 C0		 	add a, #0C0h ; construct control word for line 2
  280: 1  8177			setcur:
  281: 1  8177	F8		 	mov r0, a ; place control word
  282: 1  8178	12 80 C7	 	lcall wrLCDcom4 ; issue command
  283: 1  817B	22		 	ret
  284: 1
  285: 1			 ; ==========================================================
  286: 1			; subrutina dspShLf4
  287: 1			; Esta rutina traslada los contenidos del LCD a la izquierda. El
  288: 1			; numero de caracteres a ser trasladados es localizado en el
  289: 1			; acumulador.
  290: 1			; entrada  : acumulador indica el numero de caracteres a trasladar
  291: 1			; salida   : nada
  292: 1			; ==========================================================
  293: 1			;
  294: 1  817C			dspShLf4:
  295: 1  817C	60 07		         jz    ret_sdl
  296: 1  817E	78 18		         mov   r0, #shLfDsp ; palabra de control para trasladar a la
  297: 1			                            ; izquierda
  298: 1  8180	11 C7		         acall wrLCDcom4
  299: 1  8182	14		         dec   a
  300: 1  8183	80 F7		         sjmp  dspShLf4
  301: 1  8185	22		ret_sdl: ret
  302: 1
  303: 1			; ==========================================================
  304: 1			; subrutina dspShRt4
  305: 1			; Esta rutina traslada los contenidos del LCD a la derecha. El
  306: 1			; numero de caracteres a ser trasladados es localizado en el
  307: 1			; acumulador.
  308: 1			; entrada  : acumulador indica el numero de caracteres a trasladar
  309: 1			; salida   : nada
  310: 1			; ==========================================================
  311: 1			;
  312: 1  8186			dspShRt4:
  313: 1  8186	60 07		         jz    ret_sdr
  314: 1  8188	78 1C		         mov   r0, #shRtDsp ; palabra de control para trasladar a
  315: 1			                            ; la derecha
  316: 1  818A	11 C7		         acall wrLCDcom4

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 7



 Line  I  Addr  Code            Source

  317: 1  818C	14		         dec   a
  318: 1  818D	80 F7		         sjmp  dspShRt4
  319: 1  818F	22		ret_sdr: ret
  320:					end





                     register banks used:  ---

                     no errors




ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 8





	       L I S T   O F   S Y M B O L S
	       =============================


SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??ASEM_51			  NUMBER    8051
??VERSION			  NUMBER    0130
AC				  BIT	      D6
ACC				  DATA	      E0
B				  DATA	      F0
BINASC				  NUMBER    0109	   4
BLINKCUR			  NUMBER    000D	  62
CHROK				  CODE	    815E	 253
CLRDSP				  NUMBER    0001	  68
COMBNCUR			  NUMBER    000F	  63
CONFIG				  NUMBER    0028	  57
CY				  BIT	      D7
DELAY				  NUMBER    0118	  76
DPH				  DATA	      83
DPL				  DATA	      82
DSPSHLF4			  CODE	    817C	 294
DSPSHRT4			  CODE	    8186	 312
EA				  BIT	      AF
ENTRYMODE			  NUMBER    0006	  58
ES				  BIT	      AC
ET0				  BIT	      A9
ET1				  BIT	      AB
EX0				  BIT	      A8
EX1				  BIT	      AA
EXTI0				  CODE	    0003
EXTI1				  CODE	    0013
F0				  BIT	      D5
HOMECUR				  NUMBER    0002	  64
IE				  DATA	      A8
IE0				  BIT	      89
IE1				  BIT	      8B
INICIOLCD			  CODE	    806A	  80
INITLCD4			  CODE	    807B	  92
INT0				  BIT	      B2
INT1				  BIT	      B3
IP				  DATA	      B8
IT0				  BIT	      88
IT1				  BIT	      8A
LAZO				  CODE	    803A	  26
LCD_DATA			  NUMBER    0090	  52
LCD_E				  NUMBER    0093	  55
LCD_RS				  NUMBER    0091	  53
LCD_RW				  NUMBER    0092	  54
LINE2				  CODE	    8173	 277
LINECUR				  NUMBER    000E	  61
LOOP				  CODE	    8062	  46
OFFCUR				  NUMBER    000C	  60
OFFDSP				  NUMBER    000A	  70
ONCE_ESPACIOS			  CODE	    8060	  44
ONDSP				  NUMBER    000E	  69

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 9



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
OV				  BIT	      D2
P				  BIT	      D0
P0				  DATA	      80
P1				  DATA	      90
P2				  DATA	      A0
P3				  DATA	      B0
PCON				  DATA	      87
PEW				  CODE	    8105	 185
PLACECUR4			  CODE	    8169	 271
PRINT				  NUMBER    0136	  77
PRTLCD4				  CODE	    8153	 245
PRTNEXT				  CODE	    8157	 248
PS				  BIT	      BC
PSW				  DATA	      D0
PT0				  BIT	      B9
PT1				  BIT	      BB
PULSEEWAIT4			  CODE	    80F8	 178
PX0				  BIT	      B8
PX1				  BIT	      BA
RB8				  BIT	      9A
RD				  BIT	      B7
REN				  BIT	      9C
REPITE				  CODE	    8029	  17
RESET				  CODE	    0000
RESETLCD4			  CODE	    8115	 199
RETPRTLCD			  CODE	    8166	 258
RET_SDL				  CODE	    8185	 301
RET_SDR				  CODE	    818F	 319
RI				  BIT	      98
RS0				  BIT	      D3
RS1				  BIT	      D4
RXD				  BIT	      B0
SBUF				  DATA	      99
SCON				  DATA	      98
SDELAY				  NUMBER    0142	   5
SETCUR				  CODE	    8177	 280
SHLFCUR				  NUMBER    0010	  65
SHLFDSP				  NUMBER    0018	  71
SHRTCUR				  NUMBER    0014	  66
SHRTDSP				  NUMBER    001C	  72
SINT				  CODE	    0023
SM0				  BIT	      9F
SM1				  BIT	      9E
SM2				  BIT	      9D
SNDCHR				  NUMBER    0148	   6
SP				  DATA	      81
T0				  BIT	      B4
T1				  BIT	      B5
TB8				  BIT	      9B
TCON				  DATA	      88
TF0				  BIT	      8D
TF1				  BIT	      8F
TH0				  DATA	      8C
TH1				  DATA	      8D
TI				  BIT	      99
TIMER0				  CODE	    000B

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 10



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
TIMER1				  CODE	    001B
TL0				  DATA	      8A
TL1				  DATA	      8B
TMOD				  DATA	      89
TR0				  BIT	      8C
TR1				  BIT	      8E
TXD				  BIT	      B1
WR				  BIT	      B6
WRLCDCOM4			  CODE	    80C7	 142
WRLCDDATA4			  CODE	    8096	 111
