
ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 1





       MCS-51 Family Macro Assembler   A S E M - 5 1   V 1.3
       =====================================================



	Source File:	C:\Users\alumno\Desktop\cuarto lab\p4_dirigido4.asm
	Object File:	C:\Users\alumno\Desktop\cuarto lab\p4_dirigido4.hex
	List File:	C:\Users\alumno\Desktop\cuarto lab\p4_dirigido4.lst



 Line  I  Addr  Code            Source

    1:				;_Hacer un programa que muestre en la primera fila el mensaje Segundero: y en la segunda
    2:				;fila un contador decimal de 0 a 59 cada décima de segundo en el LCD y lo envíe también
    3:				;al terminal.
    4:		N      0148	sndchr  equ 148h
    5:		N      0142	sdelay 	equ 142h
    6:		N      8000		org 8000h
    7:	  8000	12 80 8A		lcall inicioLCD
    8:	  8003	74 01			mov a, #1 	; fila 1
    9:	  8005	75 F0 00	 	mov b, #0 	; posición 0
   10:	  8008	12 81 89	 	lcall placeCur4
   11:	  800B	12 81 73	 	lcall prtLCD4
   12:	  800E	53 45 47 55	 	db "SEGUNDERO :",0
	  8012	4E 44 45 52
	  8016	4F 20 3A 00
   13:	  801A	12 01 36	 	lcall print
   14:	  801D	53 45 47 55	 	db "SEGUNDERO :",0dh, 0ah,0
	  8021	4E 44 45 52
	  8025	4F 20 3A 0D
	  8029	0A 00
   15:	  802B	74 02		 	mov a, #2 	; fila 2
   16:	  802D	75 F0 0B	 	mov b, #11 	; posición 11
   17:	  8030	12 81 89	 	lcall placeCur4
   18:	  8033	7F 3C		 	mov R7,#60
   19:	  8035	7B 00		 	mov R3,#0
   20:	  8037	78 0C		 	mov R0,#offCur ;desaparece el cursor
   21:	  8039	12 80 E7	 	lcall wrLCDcom4
   22:	  803C			lazo:
   23:	  803C	EB		 	mov A,R3
   24:	  803D	12 80 7B	 	lcall dos_digitos_decimales
   25:	  8040	A8 30		 	mov R0,30h
   26:	  8042	12 80 B6	 	lcall wrLCDdata4
   27:	  8045	A8 31		 	mov R0,31h
   28:	  8047	12 80 B6	 	lcall wrLCDdata4
   29:	  804A	78 10		 	mov R0,#shLfCur	;desplaza el cursor a la izquierda
   30:	  804C	12 80 E7	 	lcall wrLCDcom4
   31:	  804F	78 10		 	mov R0,#shLfCur	;desplaza el cursor a la izquierda
   32:	  8051	12 80 E7	 	lcall wrLCDcom4
   33:	  8054	12 80 71	 	lcall diez_espacios
   34:	  8057	E5 30		 	mov A,30h
   35:	  8059	12 01 48	 	lcall sndchr
   36:	  805C	E5 31		 	mov A,31h
   37:	  805E	12 01 48	 	lcall sndchr
   38:	  8061	74 0D		 	mov A,#0dh

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 2



 Line  I  Addr  Code            Source

   39:	  8063	12 01 48	 	lcall sndchr
   40:	  8066	74 64		 	mov A,#100
   41:	  8068	12 01 42	 	lcall sdelay
   42:	  806B	0B		 	inc R3
   43:	  806C	DF CE		 	djnz R7,lazo
   44:	  806E	02 02 F0	 	ljmp 2F0h
   45:	  8071			diez_espacios:
   46:	  8071	7D 0A		 	mov R5,#10
   47:	  8073			loop:
   48:	  8073	74 20			mov A,#20h
   49:	  8075	12 01 48		lcall sndchr
   50:	  8078	DD F9			djnz R5,loop
   51:	  807A	22			ret
   52:	  807B			dos_digitos_decimales:
   53:	  807B	75 F0 0A		mov B,#10
   54:	  807E	84			div AB
   55:	  807F	24 30			add A,#30h
   56:	  8081	F5 30			mov 30h,A
   57:	  8083	E5 F0			mov A,B
   58:	  8085	24 30			add A,#30h
   59:	  8087	F5 31			mov 31h,A
   60:	  8089	22			ret
   61:				$INCLUDE(subrutinasLCD.inc)
   62: 1	N      0090	LCD_DATA equ 90h ; Puerto P1
   63: 1	N      0091	LCD_RS equ 91h ; p1.1 Register Select del LCD
   64: 1	N      0092	LCD_RW equ 92h ; p1.2 Read/Write del LCD
   65: 1	N      0093	LCD_E equ 93h ; p1.3 Enable del LCD
   66: 1			; Instrucciones para el LCD
   67: 1	N      0028	Config equ 28h ; Function Set: Tamaño del bus de datos(4 bits), número de líneas es 2 y tamaño del f
       1			ont es 5x7
   68: 1	N      0006	entryMode equ 6 ; Modo de Entrada: Incrementa el cursor, no desplaza display
   69: 1			; instrucciones para el control del cursor
   70: 1	N      000C	offCur equ 0Ch ; Apaga el cursor(lo desaparece)
   71: 1	N      000E	lineCur equ 0Eh ; Cursor aparece como una línea
   72: 1	N      000D	blinkCur equ 0Dh ; Hace parpadear el cursor
   73: 1	N      000F	combnCur equ 0Fh ; Encender el Display, encender cursor y parpadea el caracter en la posición del cu
       1			rsor
   74: 1	N      0002	homeCur equ 02h ; Coloca el cursor en el extremo izquierdo de la primera fila
   75: 1	N      0010	shLfCur equ 10h ; Desplaza al cursor a la izquierda
   76: 1	N      0014	shRtCur equ 14h ; Desplaza al cursor a la derecha
   77: 1			; instrucciones para el control del display
   78: 1	N      0001	clrDsp equ 01h ; Limpia el display así como el contenido de la memoria
   79: 1	N      000E	onDsp equ 0Eh ; Display On, muestra caracteres en el display
   80: 1	N      000A	offDsp equ 0Ah ; Display Off, no limpia el contenido de la memoria
   81: 1	N      0018	shLfDsp   equ  18h  ;Desplazamiento del display a la izquierda
   82: 1	N      001C	shRtDsp   equ  1Ch  ;Desplazamiento del display a la derecha
   83: 1			; ----------------------------------------------------
   84: 1			; subrutinas del TMC51 Registros usados
   85: 1			; ----------------------------------------------------
   86: 1	N      0118	delay equ 118h ; a
   87: 1	N      0136	print equ 136h ; a, dptr
   88: 1			;-----------------------------------------------------
   89: 1			;subrutina inicioLCD
   90: 1  808A			inicioLCD:
   91: 1  808A	12 81 35		lcall resetLCD4 ; power on reset
   92: 1  808D	74 01			mov A,#1

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 3



 Line  I  Addr  Code            Source

   93: 1  808F	12 01 18	 	lcall delay
   94: 1  8092	12 80 9B		lcall initLCD4
   95: 1  8095	74 01			mov A,#1
   96: 1  8097	12 01 18	 	lcall delay
   97: 1  809A	22		 	ret
   98: 1			; ====================================================
   99: 1			; subrutina initLCD4 - se usa para inicializar el LCD
  100: 1			;
  101: 1			; ----------------------------------------------------
  102: 1  809B			initLCD4:
  103: 1  809B	C2 91		 clr LCD_RS ; Pin Register Select del LCD
  104: 1  809D	C2 92		 clr LCD_RW ; Pin Read/Write del LCD
  105: 1  809F	C2 93		 clr LCD_E ; Pin Enable del LCD
  106: 1  80A1	78 28		 mov r0, #Config ; Function Set - data bits, lines, fonts
  107: 1  80A3	12 80 E7	 lcall wrLCDcom4
  108: 1  80A6	78 0E		 mov r0, #onDsp ; Enciende display
  109: 1  80A8	12 80 E7	 lcall wrLCDcom4
  110: 1  80AB	78 06		 mov r0, #entryMode ; set Entry Mode
  111: 1  80AD	12 80 E7	 lcall wrLCDcom4 ; increment cursor to right, no display shift
  112: 1  80B0	78 01		 mov r0, #clrDsp ; limpia display, cursor en home
  113: 1  80B2	12 80 E7	 lcall wrLCDcom4
  114: 1  80B5	22		 ret
  115: 1
  116: 1			; ====================================================
  117: 1			; subrutina wrLCDdata4
  118: 1			; escribe una palabra de datos al LCD
  119: 1			; datos deben ser localizados en R0
  120: 1			; ----------------------------------------------------
  121: 1  80B6			wrLCDdata4:
  122: 1  80B6	D2 91		 	setb LCD_RS ; selecciona envio de datos
  123: 1  80B8	C2 92		 	clr LCD_RW ; selecciona operación de escritura
  124: 1  80BA	C0 E0		 	push ACC ; salva el acumulador
  125: 1  80BC	E8		 	mov A, R0 ; pone byte de datos en el acumulador
  126: 1  80BD	A2 E7		 	mov C, ACC.7 ;
  127: 1  80BF	92 97		 	mov P1.7, C ;
  128: 1  80C1	A2 E6		 	mov C, ACC.6 ;
  129: 1  80C3	92 96		 	mov P1.6, C ;
  130: 1  80C5	A2 E5		 	mov C, ACC.5 ;
  131: 1  80C7	92 95		 	mov P1.5, C ;
  132: 1  80C9	A2 E4		 	mov C, ACC.4 ;
  133: 1  80CB	92 94		 	mov P1.4, C ;hasta aquí se envia el nibble mas significativo
  134: 1  80CD	D2 93			setb LCD_E ;
  135: 1  80CF	C2 93			clr LCD_E ;
  136: 1  80D1	A2 E3			mov C, ACC.3 ;
  137: 1  80D3	92 97			mov P1.7, C ;
  138: 1  80D5	A2 E2			mov C, ACC.2 ;
  139: 1  80D7	92 96			mov P1.6, C ;
  140: 1  80D9	A2 E1			mov C, ACC.1 ;
  141: 1  80DB	92 95			mov P1.5, C ;
  142: 1  80DD	A2 E0			mov C, ACC.0 ;
  143: 1  80DF	92 94			mov P1.4, C ;se envia el nibble menos significativo
  144: 1  80E1	12 81 18		lcall pulseEwait4 ; pulso en el pin Enable... y espera por el Flag Busy que se aclare
  145: 1  80E4	D0 E0			pop ACC
  146: 1  80E6	22			ret
  147: 1			; ====================================================
  148: 1			; subrutina wrLCDcom4

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 4



 Line  I  Addr  Code            Source

  149: 1			; escribe una palabra comando al LCD
  150: 1			; el comando debe ser localizado en r0
  151: 1			; ----------------------------------------------------
  152: 1  80E7			wrLCDcom4:
  153: 1  80E7	C2 91		 	clr LCD_RS ; limpia RS - y eso indica que son instrucciones a escribir
  154: 1  80E9	C2 92		 	clr LCD_RW ; selecciona operación de escritura
  155: 1  80EB	C0 E0		 	push ACC
  156: 1  80ED	E8		 	mov A,R0
  157: 1  80EE	A2 E7			mov C, ACC.7 ;
  158: 1  80F0	92 97			mov P1.7, C ;
  159: 1  80F2	A2 E6			mov C, ACC.6 ;
  160: 1  80F4	92 96			mov P1.6, C ;
  161: 1  80F6	A2 E5			mov C, ACC.5 ;
  162: 1  80F8	92 95			mov P1.5, C ;
  163: 1  80FA	A2 E4			mov C, ACC.4 ;
  164: 1  80FC	92 94			mov P1.4, C ;hasta aquí se envia el nibble mas significativo
  165: 1			;---------------------------------------
  166: 1  80FE	D2 93			setb LCD_E ;
  167: 1  8100	C2 93			clr LCD_E ;
  168: 1  8102	A2 E3			mov C, ACC.3 ;
  169: 1  8104	92 97			mov P1.7, C ;
  170: 1  8106	A2 E2			mov C, ACC.2 ;
  171: 1  8108	92 96			mov P1.6, C ;
  172: 1  810A	A2 E1			mov C, ACC.1 ;
  173: 1  810C	92 95			mov P1.5, C ;
  174: 1  810E	A2 E0			mov C, ACC.0 ;
  175: 1  8110	92 94			mov P1.4, C ;se envia el nibble menos significativo
  176: 1			;---------------------------------------
  177: 1  8112	12 81 18		lcall pulseEwait4 ; pulso en el pin Enable...
  178: 1  8115	D0 E0			pop ACC
  179: 1  8117	22			ret
  180: 1			; ====================================================
  181: 1			; subrutina pulseEwait4
  182: 1			; genera un pulso positivo sobre el pin enable del LCD.
  183: 1			; espera por el Flag Busy se aclare antes de retornar.
  184: 1			; input : nada
  185: 1			; output : nada
  186: 1			; destroys : LCD_RW, LCD_RS, LCD_DATA
  187: 1			; ----------------------------------------------------
  188: 1  8118			pulseEwait4:
  189: 1  8118	C2 93		 	clr LCD_E
  190: 1  811A	D2 93		 	setb LCD_E ; pulso en el pin Enable
  191: 1  811C	C2 93		 	clr LCD_E
  192: 1  811E	75 90 FF	 	mov LCD_DATA, #0ffh ; prepara el puerto para entrada
  193: 1  8121	D2 92		 	setb LCD_RW ; prepara R/W para la operación de lectura
  194: 1  8123	C0 E0		 	push ACC ; salva contenidos del acumulador
  195: 1  8125			pEw:
  196: 1  8125	D2 93		 	setb LCD_E ; inicia el pulso Enable
  197: 1  8127	E5 90		 	mov A, LCD_DATA ; lee el nibble de estado
  198: 1  8129	C2 93		 	clr LCD_E ; termina el pulso en Enable
  199: 1  812B	D2 93		 	setb LCD_E ;
  200: 1  812D	C2 93		 	clr LCD_E
  201: 1  812F	20 E7 F3	 	jb ACC.7, pEw ; se hace el lazo mientras que Flag Busy es uno
  202: 1  8132	D0 E0		 	pop ACC ; restaura acumulador
  203: 1  8134	22		 	ret
  204: 1			; ====================================================

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 5



 Line  I  Addr  Code            Source

  205: 1			; subrutina resetLCD4 - reinicia el LCD
  206: 1			; version en software de la operación
  207: 1			; power on reset
  208: 1			; ----------------------------------------------------
  209: 1  8135			resetLCD4:
  210: 1  8135	C2 91		 	clr LCD_RS ; Se pone a 0 el pin RS
  211: 1  8137	C2 92		 	clr LCD_RW ; Se pone a 0 el pin Read / Write
  212: 1  8139	C2 93		 	clr LCD_E ; Se pone a 0 el pin E
  213: 1  813B	C2 97		 	clr P1.7 ; se fijan los bits para...
  214: 1  813D	C2 96		 	clr P1.6 ; ... power-on-reset
  215: 1  813F	D2 95		 	setb P1.5
  216: 1  8141	D2 94		 	setb P1.4
  217: 1			 	; paso 1
  218: 1  8143	D2 93		 	setb LCD_E ; start Enable pulse
  219: 1  8145	C2 93		 	clr LCD_E ; end Enable pulse
  220: 1  8147	74 04		 	mov A, #4 ; retardo de 4 milisegundos
  221: 1  8149	12 01 18	 	lcall delay
  222: 1			 	; paso 2
  223: 1  814C	D2 93		 	setb LCD_E ; start Enable pulse
  224: 1  814E	C2 93		 	clr LCD_E ; end Enable pulse
  225: 1  8150	74 01		 	mov A, #1 ; retardo de 1 milisegundo
  226: 1  8152	12 01 18		lcall delay
  227: 1			 	; paso 3
  228: 1  8155	D2 93		 	setb LCD_E ; start Enable pulse
  229: 1  8157	C2 93		 	clr LCD_E ; end Enable pulse
  230: 1  8159	74 01		 	mov A, #1 ; retardo de 1 milisegundo
  231: 1  815B	12 01 18	 	lcall delay
  232: 1  815E	78 28		 	mov R0, #Config ; FUNCTION SET
  233: 1  8160	12 80 E7	 	lcall wrLCDcom4
  234: 1  8163	78 0A		 	mov R0, #offDsp ; display off
  235: 1  8165	12 80 E7	 	lcall wrLCDcom4
  236: 1  8168	78 01		 	mov R0, #clrDsp ; clear display, home cursor
  237: 1  816A	12 80 E7	 	lcall wrLCDcom4
  238: 1  816D	78 06		 	mov R0, #entryMode ; set ENTRY MODE
  239: 1  816F	12 80 E7	 	lcall wrLCDcom4
  240: 1  8172	22		 	ret
  241: 1
  242: 1			; ==========================================================
  243: 1			; subrutina prtLCD4
  244: 1			; toma la cadena inmediatamente que sigue a call y
  245: 1			; lo muestra sobre el LCD. La cadena es leida con la
  246: 1			; instrucción mov a, @a+dptr.
  247: 1			; de este modo, la cadena se encuentra en memoria de datos.
  248: 1			; la cadena debe ser terminada con un nulo (0).
  249: 1			;
  250: 1			; input : nada
  251: 1			; output : nada
  252: 1			; destroys : acc, dptr
  253: 1			; ==========================================================
  254: 1			;
  255: 1  8173			prtLCD4:
  256: 1  8173	D0 83		 pop dph ; pop retorna dirección en el dptr
  257: 1  8175	D0 82		 pop dpl
  258: 1  8177			prtNext:
  259: 1  8177	E4		 clr a ; fija offset = 0
  260: 1  8178	93		 movc a, @a+dptr ; get chr from code memory

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 6



 Line  I  Addr  Code            Source

  261: 1  8179	B4 00 02	 cjne a, #0, chrOK ; if chr = 0 then return
  262: 1  817C	80 08		 sjmp retPrtLCD
  263: 1  817E			chrOK:
  264: 1  817E	F8		 mov r0, a
  265: 1  817F	12 80 B6	 lcall wrLCDdata4 ; envia caracter
  266: 1  8182	A3		 inc dptr ; apunta al siguiente caracter
  267: 1  8183	02 81 77	 ljmp prtNext ; itera hasta el fin de la cadena
  268: 1  8186			retPrtLCD:
  269: 1  8186	74 01		 mov a, #1h ; apunta a la instrucción después de la cadena
  270: 1  8188	73		 jmp @a+dptr ; return with a jump instruction
  271: 1			; ==========================================================
  272: 1			; subrutina placeCur4
  273: 1			; esta rutina fija la posición del cursor. La posición del cursor
  274: 1			; es localizado en el registro B. La posición del cursor empieza
  275: 1			; en 0. El acumulador da el número de línea.
  276: 1			; input : el acumulador indica el número de línea (1, 2)
  277: 1			; : el registro B contiene la posición del cursor
  278: 1			; output : nada
  279: 1			; ==========================================================
  280: 1			;
  281: 1  8189			placeCur4:
  282: 1  8189	15 E0		 	dec acc ; acc=0 for line=1
  283: 1  818B	70 06		 	jnz line2 ; if acc=0 then first line
  284: 1  818D	E5 F0		 	mov a, b
  285: 1  818F	24 80		 	add a, #080h ; construct control word for line 1
  286: 1  8191	80 04		 	sjmp setcur
  287: 1  8193			line2:
  288: 1  8193	E5 F0		 	mov a, b
  289: 1  8195	24 C0		 	add a, #0C0h ; construct control word for line 2
  290: 1  8197			setcur:
  291: 1  8197	F8		 	mov r0, a ; place control word
  292: 1  8198	12 80 E7	 	lcall wrLCDcom4 ; issue command
  293: 1  819B	22		 	ret
  294: 1
  295: 1			 ; ==========================================================
  296: 1			; subrutina dspShLf4
  297: 1			; Esta rutina traslada los contenidos del LCD a la izquierda. El
  298: 1			; numero de caracteres a ser trasladados es localizado en el
  299: 1			; acumulador.
  300: 1			; entrada  : acumulador indica el numero de caracteres a trasladar
  301: 1			; salida   : nada
  302: 1			; ==========================================================
  303: 1			;
  304: 1  819C			dspShLf4:
  305: 1  819C	60 07		         jz    ret_sdl
  306: 1  819E	78 18		         mov   r0, #shLfDsp ; palabra de control para trasladar a la
  307: 1			                            ; izquierda
  308: 1  81A0	11 E7		         acall wrLCDcom4
  309: 1  81A2	14		         dec   a
  310: 1  81A3	80 F7		         sjmp  dspShLf4
  311: 1  81A5	22		ret_sdl: ret
  312: 1
  313: 1			; ==========================================================
  314: 1			; subrutina dspShRt4
  315: 1			; Esta rutina traslada los contenidos del LCD a la derecha. El
  316: 1			; numero de caracteres a ser trasladados es localizado en el

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 7



 Line  I  Addr  Code            Source

  317: 1			; acumulador.
  318: 1			; entrada  : acumulador indica el numero de caracteres a trasladar
  319: 1			; salida   : nada
  320: 1			; ==========================================================
  321: 1			;
  322: 1  81A6			dspShRt4:
  323: 1  81A6	60 07		         jz    ret_sdr
  324: 1  81A8	78 1C		         mov   r0, #shRtDsp ; palabra de control para trasladar a
  325: 1			                            ; la derecha
  326: 1  81AA	11 E7		         acall wrLCDcom4
  327: 1  81AC	14		         dec   a
  328: 1  81AD	80 F7		         sjmp  dspShRt4
  329: 1  81AF	22		ret_sdr: ret
  330:					end





                     register banks used:  ---

                     no errors




ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 8





	       L I S T   O F   S Y M B O L S
	       =============================


SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??ASEM_51			  NUMBER    8051
??VERSION			  NUMBER    0130
AC				  BIT	      D6
ACC				  DATA	      E0
B				  DATA	      F0
BLINKCUR			  NUMBER    000D	  72
CHROK				  CODE	    817E	 263
CLRDSP				  NUMBER    0001	  78
COMBNCUR			  NUMBER    000F	  73
CONFIG				  NUMBER    0028	  67
CY				  BIT	      D7
DELAY				  NUMBER    0118	  86
DIEZ_ESPACIOS			  CODE	    8071	  45
DOS_DIGITOS_DECIMALES		  CODE	    807B	  52
DPH				  DATA	      83
DPL				  DATA	      82
DSPSHLF4			  CODE	    819C	 304
DSPSHRT4			  CODE	    81A6	 322
EA				  BIT	      AF
ENTRYMODE			  NUMBER    0006	  68
ES				  BIT	      AC
ET0				  BIT	      A9
ET1				  BIT	      AB
EX0				  BIT	      A8
EX1				  BIT	      AA
EXTI0				  CODE	    0003
EXTI1				  CODE	    0013
F0				  BIT	      D5
HOMECUR				  NUMBER    0002	  74
IE				  DATA	      A8
IE0				  BIT	      89
IE1				  BIT	      8B
INICIOLCD			  CODE	    808A	  90
INITLCD4			  CODE	    809B	 102
INT0				  BIT	      B2
INT1				  BIT	      B3
IP				  DATA	      B8
IT0				  BIT	      88
IT1				  BIT	      8A
LAZO				  CODE	    803C	  22
LCD_DATA			  NUMBER    0090	  62
LCD_E				  NUMBER    0093	  65
LCD_RS				  NUMBER    0091	  63
LCD_RW				  NUMBER    0092	  64
LINE2				  CODE	    8193	 287
LINECUR				  NUMBER    000E	  71
LOOP				  CODE	    8073	  47
OFFCUR				  NUMBER    000C	  70
OFFDSP				  NUMBER    000A	  80
ONDSP				  NUMBER    000E	  79

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 9



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
OV				  BIT	      D2
P				  BIT	      D0
P0				  DATA	      80
P1				  DATA	      90
P2				  DATA	      A0
P3				  DATA	      B0
PCON				  DATA	      87
PEW				  CODE	    8125	 195
PLACECUR4			  CODE	    8189	 281
PRINT				  NUMBER    0136	  87
PRTLCD4				  CODE	    8173	 255
PRTNEXT				  CODE	    8177	 258
PS				  BIT	      BC
PSW				  DATA	      D0
PT0				  BIT	      B9
PT1				  BIT	      BB
PULSEEWAIT4			  CODE	    8118	 188
PX0				  BIT	      B8
PX1				  BIT	      BA
RB8				  BIT	      9A
RD				  BIT	      B7
REN				  BIT	      9C
RESET				  CODE	    0000
RESETLCD4			  CODE	    8135	 209
RETPRTLCD			  CODE	    8186	 268
RET_SDL				  CODE	    81A5	 311
RET_SDR				  CODE	    81AF	 329
RI				  BIT	      98
RS0				  BIT	      D3
RS1				  BIT	      D4
RXD				  BIT	      B0
SBUF				  DATA	      99
SCON				  DATA	      98
SDELAY				  NUMBER    0142	   5
SETCUR				  CODE	    8197	 290
SHLFCUR				  NUMBER    0010	  75
SHLFDSP				  NUMBER    0018	  81
SHRTCUR				  NUMBER    0014	  76
SHRTDSP				  NUMBER    001C	  82
SINT				  CODE	    0023
SM0				  BIT	      9F
SM1				  BIT	      9E
SM2				  BIT	      9D
SNDCHR				  NUMBER    0148	   4
SP				  DATA	      81
T0				  BIT	      B4
T1				  BIT	      B5
TB8				  BIT	      9B
TCON				  DATA	      88
TF0				  BIT	      8D
TF1				  BIT	      8F
TH0				  DATA	      8C
TH1				  DATA	      8D
TI				  BIT	      99
TIMER0				  CODE	    000B
TIMER1				  CODE	    001B

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 10



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
TL0				  DATA	      8A
TL1				  DATA	      8B
TMOD				  DATA	      89
TR0				  BIT	      8C
TR1				  BIT	      8E
TXD				  BIT	      B1
WR				  BIT	      B6
WRLCDCOM4			  CODE	    80E7	 152
WRLCDDATA4			  CODE	    80B6	 121
